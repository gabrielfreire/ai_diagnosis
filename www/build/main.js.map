{"version":3,"sources":["../../src/models/form/questions/question.model.ts","../../src/app/app.service.ts","../../src/providers/cognitive-services/cognitive.service.ts","../../src/app/server.connection.ts","../../src/providers/index.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/tabs/tabs.ts","../../src/pages/about/about.ts","../../src/pages/contact/contact.ts","../../src/pages/home/home.ts","../../src/pages/chat_watson/chat.ts","../../src/pages/picture-analisys/picture-analisys.ts","../../src/providers/camera/camera.provider.ts","../../src/components/formbuilder/Form/FormBuilder.component.ts","../../src/providers/form/question.service.ts","../../src/mappers/question-mapper.service.ts","../../src/providers/form/question-control.service.ts","../../src/providers/diagnostics/diagnostic.service.ts","../../src/mappers/event-mapper.service.ts","../../src/providers/web-audio/wav-recorder.ts","../../src/providers/web-audio/recorder.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../ws (ignored)","../../src/app/app.component.ts","../../src/pages/chat_watson/ChatUser.ts","../../src/pages/chat_watson/ChatRoom.ts","../../https-proxy-agent (ignored)","webpack:///ws (ignored)?6e6f","../../../../external/ocsp/ocsp (ignored)","../../src/models/wav-file/wav-file.ts","../../src/models/double-buffer/double-buffer.ts","../../src/models/filesystem/filesystem.ts","../../src/models/misc-utils/misc-utils.ts","../../src/models/form/questions/question-dropdown.model.ts","../../src/models/form/questions/question-textbox.model.ts","../../src/models/form/questions/question-toggle.model.ts","../../src/components/loaders/loaders.ts","../../src/providers/web-audio/audioContextGenerator.service.ts","../../src/components/formbuilder/Question/DynamicQuestion.component.ts","../../src/models/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Event } from './../../event.model';\r\n\r\nexport class Question {\r\n    value: string;\r\n    key: string;\r\n    label: string;\r\n    order: number;\r\n    required: boolean;\r\n    visibility: string;\r\n    event: Event;\r\n    controlType: string;\r\n\r\n    constructor(options?){\r\n        this.value = options.value || \"\";\r\n        this.key = options.key || '';\r\n        this.label = options.label || '';\r\n        this.required = !!options.required || false;\r\n        this.order = options.order === undefined ? 1 : options.order;\r\n        this.visibility = options.visibility || \"visible\";\r\n        this.event = options.event || null;\r\n        this.controlType = options.controlType || '';\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/form/questions/question.model.ts","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n    // Observable string sources\r\n    private emitChangeSource = new Subject<any>();\r\n    // Observable string streams\r\n    listenMessage = this.emitChangeSource.asObservable();\r\n    constructor(){\r\n    }\r\n    // Service message commands\r\n    emitMessage(change: any) {\r\n        this.emitChangeSource.next(change);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.service.ts","import * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport keys from '../../utils/keys';\r\nimport { server } from '../../app/server.connection';\r\nimport 'rxjs/add/operator/map';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n// import * as SDK from 'microsoft-speech-browser-sdk';\r\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\r\nimport {  NgZone } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CognitiveService {\r\n    private recognizer;\r\n    private soundAnalysisHeader: Headers;\r\n    private authorizationToken: string = \"a695cace0bbe42e7902d7f8aae1e8a6a\";\r\n    // Observable string sources\r\n    private emitChangeSource = new Subject<any>();\r\n    // Observable string streams\r\n    listenMessage = this.emitChangeSource.asObservable();\r\n    constructor(private http: Http, public speechRecognition: SpeechRecognition, public zone: NgZone) {\r\n        // this.recognizer = this._RecognizerSetup(SDK, \"Dictation\", \"en-US\", \"Simple\", \"17328acb588e413eaf4f56c885b3511f\");\r\n        this.soundAnalysisHeader = new Headers();\r\n        \r\n    }\r\n    // Service message commands\r\n    emitMessage(change: any) {\r\n        this.emitChangeSource.next(change);\r\n    }\r\n    speak() {\r\n        var self = this;\r\n        var audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\r\n        var speechConfig;\r\n        if (this.authorizationToken) {\r\n            this.soundAnalysisHeader.append('Ocp-Apim-Subscription-Key',this.authorizationToken);\r\n            this.soundAnalysisHeader.append('Content-Type','audio/wav; codec=\"audio/pcm\"; samplerate=16000');\r\n            speechConfig = SpeechSDK.SpeechConfig.fromSubscription(this.authorizationToken, \"westus\");\r\n        } else {\r\n            alert(\"Please enter your key\");\r\n            return;\r\n        }\r\n        \r\n        if (speechConfig) {\r\n            speechConfig.speechRecognitionLanguage = \"en-US\";\r\n        }\r\n        console.log('Loaded SDK');\r\n        this.recognizer = new SpeechSDK.SpeechRecognizer(speechConfig, audioConfig);\r\n        this.recognizer.sessionStarted = function (s, e) {\r\n            console.log(e);\r\n            console.log(\"Session started\");\r\n        }\r\n        this.recognizer.recognized = function (s, e) {\r\n            console.log(e);\r\n            console.log(\"Recognized\");\r\n            self.emitMessage(e.result.text);\r\n        }\r\n        this.recognizer.canceled = function (s, e) {\r\n            console.log(e);\r\n            console.log(\"Canceled\");\r\n            if (e.reason === SpeechSDK.CancellationReason.Error) {\r\n                console.log(e.errorDetails);\r\n            }\r\n        }\r\n\r\n        // Starts recognition\r\n        this.recognizer.startContinuousRecognitionAsync();\r\n        // this._recognizerStart(SpeechSDK, this.recognizer);\r\n    }\r\n\r\n    stopSpeaking() {\r\n        const self = this;\r\n        // this._RecognizerStop(SpeechSDK, this.recognizer);\r\n        this.recognizer.stopContinuousRecognitionAsync(\r\n            function () {\r\n                self.recognizer.close();\r\n                self.recognizer = undefined;\r\n            },\r\n            function (err) {\r\n                self.recognizer.close();\r\n                self.recognizer = undefined;\r\n            });\r\n\r\n        console.log('Stopped');\r\n        // if(this.speechRecognition.stopListening) this.speechRecognition.stopListening().then(() => console.log('stoped'), (error) => self.emitMessage(error));\r\n    }\r\n\r\n    analyzeImage(imageDataURL: string): Observable<any> {\r\n        const uriBase = server.vision_url;\r\n        const headers = new Headers();\r\n        const self = this;\r\n        headers.append('Content-Type', 'application/octet-stream');\r\n        headers.append('Ocp-Apim-Subscription-Key', \"6c2ca639591f4c00bea957ad371c36ac\");\r\n        const src: Observable<any> = Observable.create((observer) => {\r\n            let imageBlob = this.dataURItoBlob(imageDataURL);\r\n            this.http.post(uriBase, imageBlob, {headers: headers}).map((res) => res.json()).subscribe((data) => {\r\n                observer.next(data);\r\n                observer.complete();\r\n            }, (error) => observer.error(error));\r\n        });\r\n        return src;\r\n    }\r\n\r\n    dataURItoBlob(dataURI: string): Blob {\r\n        // convert base64 to raw binary data held in a string\r\n        // var byteString = atob(dataURI.split(',')[1]);\r\n        const byteString = atob(dataURI);\r\n    \r\n        // separate out the mime component\r\n        const mimeString = 'image/jpeg';\r\n        // var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n    \r\n        // write the bytes of the string to an ArrayBuffer\r\n        const arrayBuffer = new ArrayBuffer(byteString.length);\r\n        let _ia = new Uint8Array(arrayBuffer);\r\n        for (var i = 0; i < byteString.length; i++) {\r\n            _ia[i] = byteString.charCodeAt(i);\r\n        }\r\n    \r\n        const dataView = new DataView(arrayBuffer);\r\n        const blob = new Blob([dataView], { type: mimeString });\r\n        return blob;\r\n    }\r\n\r\n    analyseSound(soundFile: File | Blob): Observable<any> {\r\n        const src: Observable<any> = Observable.create((observer) => {\r\n            let speechURL =\"https://speech.platform.bing.com/speech/recognition/dictation/cognitiveservices/v1?language=en-US&format=simple\";\r\n            this.http.post(speechURL, soundFile, {headers: this.soundAnalysisHeader}).subscribe((data) => {\r\n                data = data.json();\r\n                console.log(data);\r\n                observer.next(data);\r\n                observer.complete();\r\n            }, (error) => {\r\n                observer.error(error);\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    private _RecognizerSetup(SDK: any, recognitionMode: string, language: string, format: string, subscriptionKey: string) {\r\n            \r\n        switch (recognitionMode) {\r\n            case \"Interactive\" :\r\n                recognitionMode = SDK.RecognitionMode.Interactive;    \r\n                break;\r\n            case \"Conversation\" :\r\n                recognitionMode = SDK.RecognitionMode.Conversation;    \r\n                break;\r\n            case \"Dictation\" :\r\n                recognitionMode = SDK.RecognitionMode.Dictation;    \r\n                break;\r\n            default:\r\n                recognitionMode = SDK.RecognitionMode.Interactive;\r\n        }\r\n        var recognizerConfig = new SDK.RecognizerConfig(\r\n            new SDK.SpeechConfig(\r\n                new SDK.Context(\r\n                    new SDK.OS(navigator.userAgent, \"Browser\", null),\r\n                    new SDK.Device(\"SpeechSample\", \"SpeechSample\", \"1.0.00000\"))),\r\n            recognitionMode,\r\n            language, // Supported languages are specific to each recognition mode. Refer to docs.\r\n            format); // SDK.SpeechResultFormat.Simple (Options - Simple/Detailed)\r\n        \r\n        return SDK.CreateRecognizer(recognizerConfig, new SDK.CognitiveSubscriptionKeyAuthentication(subscriptionKey));\r\n    }\r\n\r\n    private _recognizerStart(SDK, recognizer) {\r\n        recognizer.Recognize((event) => {\r\n            /*\r\n                Alternative syntax for typescript devs.\r\n                if (event instanceof SDK.RecognitionTriggeredEvent)\r\n            */\r\n            switch (event.Name) {\r\n                case \"RecognitionTriggeredEvent\" :\r\n                    console.log(\"Initializing\");\r\n                    break;\r\n                case \"ListeningStartedEvent\" :\r\n                    console.log(\"Listening\");\r\n                    break;\r\n                case \"RecognitionStartedEvent\" :\r\n                    console.log(\"Listening_Recognizing\");\r\n                    break;\r\n                case \"SpeechStartDetectedEvent\" :\r\n                    console.log(\"Listening_DetectedSpeech_Recognizing\");\r\n                    console.log(JSON.stringify(event.Result)); // check console for other information in result\r\n                    break;\r\n                case \"SpeechHypothesisEvent\" :\r\n                    console.log('Hypoteses ->', event.Result.Text);\r\n                    console.log(JSON.stringify(event.Result)); // check console for other information in result\r\n                    break;\r\n                case \"SpeechFragmentEvent\" :\r\n                    console.log('Hypoteses ->', event.Result.Text);\r\n                    console.log(JSON.stringify(event.Result)); // check console for other information in result\r\n                    break;\r\n                case \"SpeechEndDetectedEvent\" :\r\n                    console.log('Speech end detected');\r\n                    console.log(\"Processing_Adding_Final_Touches\");\r\n                    console.log(JSON.stringify(event.Result)); // check console for other information in result\r\n                    break;\r\n                case \"SpeechSimplePhraseEvent\" :\r\n                    console.log('Recognized phrase SIMPLE ->', JSON.stringify(event.Result, null, 3));\r\n                    this.emitMessage(event.Result);\r\n                    break;\r\n                    case \"SpeechDetailedPhraseEvent\" :\r\n                    console.log('Recognized phrase DETAILED ->', JSON.stringify(event.Result, null, 3));\r\n                    this.emitMessage(event.Result);\r\n                    break;\r\n                case \"RecognitionEndedEvent\" :\r\n                    console.log('Completed');\r\n                    console.log(\"Idle\");\r\n                    console.log(JSON.stringify(event)); // Debug information\r\n                    break;\r\n            }\r\n        })\r\n        .On(() => {\r\n            // The request succeeded. Nothing to do here.\r\n            console.log('Success!');\r\n        },\r\n        (error) => {\r\n            console.log('ERROR');\r\n            console.info(error);\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    private _RecognizerStop(SDK, recognizer) {\r\n        // recognizer.AudioSource.Detach(audioNodeId) can be also used here. (audioNodeId is part of ListeningStartedEvent)\r\n        recognizer.AudioSource.TurnOff();\r\n    }\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/cognitive-services/cognitive.service.ts","export const server = {\r\n    // url: 'http://localhost:3000/api'\r\n    url: 'https://imsdiag.herokuapp.com/api',\r\n    vision_url: 'https://westeurope.api.cognitive.microsoft.com/vision/v1.0/analyze?visualFeatures=Categories%2CDescription%2CColor&details=&language=en'\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/server.connection.ts","export * from './web-audio/audioContextGenerator.service';\r\nexport * from './web-audio/recorder';\r\nexport * from './web-audio/wav-recorder';\r\nexport * from './diagnostics/diagnostic.service';\r\nexport * from './cognitive-services/cognitive.service';\r\nexport * from './camera/camera.provider';\n\n\n// WEBPACK FOOTER //\n// ./src/providers/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 200;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 200\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 258;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 258\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { AboutPage } from '../about/about';\r\nimport { ContactPage } from '../contact/contact';\r\nimport { HomePage } from '../home/home';\r\n\r\n@Component({\r\n  templateUrl: 'tabs.html'\r\n})\r\nexport class TabsPage {\r\n\r\n  tab1Root = HomePage;\r\n  tab2Root = AboutPage;\r\n  tab3Root = ContactPage;\r\n\r\n  constructor() {}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-about',\r\n  templateUrl: 'about.html'\r\n})\r\nexport class AboutPage {\r\n  dataie: string = `{\r\n    \"metadata\": null,\r\n    \"questionset\": [{\r\n        \"additional_information\": {\r\n            \"title\": \"Patient Health Questionnaire (PHQ-9)\",\r\n            \"created_at\": null,\r\n            \"updated_at\": null,\r\n            \"question_id\": null,\r\n            \"subheader\": \"Validity has been assessed against an independent structured mental health professional (MHP) interview. PHQ-9 score ≥10 had a sensitivity of 88% and a specificity of 88% for major depression. It can even be used over the telephone.\"\r\n        },\r\n        \"questions\": [{\r\n                \"key\": \"question1\",\r\n                \"label\": \"Little interest or pleasure in doing things?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 0,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question2\",\r\n                \"label\": \"Feeling down, depressed, or hopeless?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 1,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question3\",\r\n                \"label\": \"Trouble falling or staying asleep, or sleeping too much?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 2,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question4\",\r\n                \"label\": \"Feeling tired or having little energy?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 3,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question5\",\r\n                \"label\": \"Poor appetite or overeating?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 4,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question6\",\r\n                \"label\": \"Feeling bad about yourself - or that you are a failure or have let yourself or your family down?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 5,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question7\",\r\n                \"label\": \"Moving or speaking so slowly that other people could have noticed? Or the opposite - being so fidgety or restless that you have been moving around a lot more than usual?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 6,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question8\",\r\n                \"label\": \"Thoughts that you would be better off dead, or of hurting yourself in some way?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 7,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            },\r\n            {\r\n                \"key\": \"question9\",\r\n                \"label\": \"Trouble concentrating on things, such as reading the newspaper or watching television?\",\r\n                \"value\": \"\",\r\n                \"required\": true,\r\n                \"options\": [{\r\n                        \"key\": 0,\r\n                        \"value\": \"Not at all\"\r\n                    },\r\n                    {\r\n                        \"key\": 1,\r\n                        \"value\": \"Several days\"\r\n                    },\r\n                    {\r\n                        \"key\": 2,\r\n                        \"value\": \"More than half the days\"\r\n                    },\r\n                    {\r\n                        \"key\": 3,\r\n                        \"value\": \"Nearly every day\"\r\n                    }\r\n                ],\r\n                \"order\": 8,\r\n                \"visibility\": \"visible\",\r\n                \"controlType\": \"dropdown\"\r\n            }\r\n        ],\r\n        \"evaluation\": [{\r\n                \"maxscore\": 27,\r\n                \"event\": {\r\n                    \"type\": \"score_id\",\r\n                    \"message\": \"Severe\"\r\n                },\r\n                \"fact\": \"mental_health_condition\",\r\n                \"path\": \".score\"\r\n            },\r\n            {\r\n                \"maxscore\": 19,\r\n                \"event\": {\r\n                    \"type\": \"score_id\",\r\n                    \"message\": \"Moderately Severe\"\r\n                },\r\n                \"fact\": \"mental_health_condition\",\r\n                \"path\": \".score\"\r\n            },\r\n            {\r\n                \"maxscore\": 14,\r\n                \"event\": {\r\n                    \"type\": \"score_id\",\r\n                    \"message\": \"Moderate\"\r\n                },\r\n                \"fact\": \"mental_health_condition\",\r\n                \"path\": \".score\"\r\n            },\r\n            {\r\n                \"maxscore\": 9,\r\n                \"event\": {\r\n                    \"type\": \"score_id\",\r\n                    \"message\": \"Mild\"\r\n                },\r\n                \"fact\": \"mental_health_condition\",\r\n                \"path\": \".score\"\r\n            },\r\n            {\r\n                \"maxscore\": 4,\r\n                \"event\": {\r\n                    \"type\": \"score_id\",\r\n                    \"message\": \"None\"\r\n                },\r\n                \"fact\": \"mental_health_condition\",\r\n                \"path\": \".score\"\r\n            }\r\n        ]\r\n    }]\r\n}`\r\n  \r\n  ruleie = `{\r\n      conditions: {\r\n          all: [{\r\n                  fact: 'sore-throat',\r\n                  operator: 'lessThanInclusive',\r\n                  value: 10,\r\n                  path: '.soreThroatLevel'\r\n              },\r\n              {\r\n                  fact: 'sore-throat',\r\n                  operator: 'greaterThanInclusive',\r\n                  value: 5,\r\n                  path: '.soreThroatLevel'\r\n              },\r\n              {\r\n                  fact: 'stuffy-nose',\r\n                  operator: 'greaterThanInclusive',\r\n                  value: 5,\r\n                  path: '.stuffyNoseLevel'\r\n              },\r\n              {\r\n                  fact: 'headache',\r\n                  operator: 'greaterThanInclusive',\r\n                  value: 6,\r\n                  path: '.headacheLevel'\r\n              },\r\n              {\r\n                  fact: 'has-fever',\r\n                  operator: 'greaterThanInclusive',\r\n                  value: 7,\r\n                  path: '.feverLevel'\r\n              }\r\n          ]\r\n      },\r\n      event: {\r\n          type: 'has-flu',\r\n          params: {\r\n              message: 'The current Patient has flu',\r\n              recommendations: ['Drink a lot of water', 'Consume Vitamin C', 'Patient should Rest']\r\n          }\r\n      }\r\n  }`\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\n\r\n@Component({\r\n  selector: 'page-contact',\r\n  templateUrl: 'contact.html'\r\n})\r\nexport class ContactPage {\r\n\r\n  constructor(public navCtrl: NavController) {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { ChatPage } from '../chat_watson/chat';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\nimport { PictureAnalisysPage } from './../picture-analisys/picture-analisys';\r\nimport { AppService } from './../../app/app.service';\r\nimport { FormBuilder } from '../../components/formbuilder/Form/FormBuilder.component';\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage implements OnInit{\r\n  model: any;\r\n  options: CameraOptions;\r\n  base64Image: string;\r\n  constructor(public navCtrl: NavController, public camera: Camera,\r\n              public appService: AppService) {}\r\n  \r\n  ngOnInit() {\r\n    this.appService.listenMessage.subscribe((value: string) => {\r\n      switch(value) {\r\n        case 'hd':\r\n          this.goToForm('hd');\r\n          break;\r\n        case 'flu':\r\n          this.goToForm('flu');\r\n          break;\r\n      }\r\n    })\r\n  }\r\n\r\n  goToChat(){\r\n    this.navCtrl.push(ChatPage);\r\n  }\r\n  goToPictureAnalisys() {\r\n    this.navCtrl.push(PictureAnalisysPage);\r\n  }\r\n  goToForm(value){\r\n    this.navCtrl.push(FormBuilder, { form: value });\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { ViewChild, NgZone, Component, OnInit, ElementRef } from \"@angular/core\";\r\nimport { Content, NavController } from 'ionic-angular';\r\nimport { Socket } from 'ng-socket-io';\r\nimport { ChatUser } from './ChatUser';\r\nimport { ChatRoom } from './ChatRoom';\r\n@Component({\r\n    selector: 'app-chat',\r\n    templateUrl: 'chat.html',\r\n    styles: ['./chat.scss']\r\n})\r\nexport class ChatPage implements OnInit{\r\n    @ViewChild('content') content: Content;\r\n    @ViewChild('chat_input') messageInput: ElementRef;\r\n    chatRoom: ChatRoom = new ChatRoom();\r\n    zone: NgZone;\r\n    chatBox: string;\r\n    constructor(private socket: Socket, private navController:NavController) { }\r\n\r\n    ngOnInit(){\r\n        //start watson chat\r\n        this.chatRoom.addUser(new ChatUser('bot'));\r\n        this.chatRoom.addUser(new ChatUser('user'));\r\n        this.zone = new NgZone({enableLongStackTrace: false});\r\n        this.socket.connect();\r\n        this.chatBox = \"\";\r\n        this.socket.on(\"chat_message\", (msg) => {\r\n            this.zone.run(() => {\r\n                this.chatRoom.addMessage('bot', `${msg}`);\r\n                this.focus();\r\n                setTimeout(() => {\r\n                    if(this.content._scroll){\r\n                        this.content.scrollToBottom();\r\n                    }\r\n                },300);\r\n            });\r\n        });\r\n        this.socket.on('disconnect', () => {\r\n            // TODO SOMETHING\r\n            console.warn('Disconnected from socket');\r\n            setTimeout(() => this.navController.pop(), 1300);\r\n        });\r\n    }\r\n\r\n    ionViewDidLeave(): void {\r\n        this.socket.disconnect();\r\n    }\r\n    \r\n    send(): void {\r\n        if(this.chatBox == '') return;\r\n        let message = this.chatBox.trim();\r\n        this.zone.run(() => {\r\n            this.chatRoom.addMessage('user', `${message}`);\r\n            setTimeout(() => {\r\n                if(this.content._scroll){\r\n                    this.content.scrollToBottom();\r\n                }\r\n            },300);\r\n        });\r\n        this.socket.emit(\"chat_message\", message);\r\n        \r\n        this.chatBox = \"\";\r\n    }\r\n    onFocus(): void {\r\n        this.content.resize();\r\n        this.content.scrollToBottom();\r\n    }\r\n    private focus(): void {\r\n        if (this.messageInput && this.messageInput.nativeElement) {\r\n            this.messageInput.nativeElement.focus();\r\n        }\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat_watson/chat.ts","import { Component } from '@angular/core';\r\nimport { NavController, NavParams, LoadingController } from 'ionic-angular';\r\nimport { CameraProvider } from './../../providers/camera/camera.provider';\r\nimport { NativeStorage } from '@ionic-native/native-storage';\r\nimport { CognitiveService } from './../../providers/cognitive-services/cognitive.service';\r\n/**\r\n * Generated class for the PictureAnalisysPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n@Component({\r\n  selector: 'page-picture-analisys',\r\n  templateUrl: 'picture-analisys.html',\r\n})\r\nexport class PictureAnalisysPage {\r\n  isMute: boolean = false;\r\n  loading: string = 'Loading';\r\n  picture: boolean|string = false;\r\n  imageDescription: string = '';\r\n  isSpeak: boolean = false;\r\n  error: boolean|string = false;\r\n  constructor(public navCtrl: NavController, \r\n              public navParams: NavParams, \r\n              public cameraProvider: CameraProvider, \r\n              private cognitiveService: CognitiveService, \r\n              public loadingCtrl: LoadingController, \r\n              private nativeStorage: NativeStorage) {\r\n  }\r\n\r\n  ionViewCanEnter() {\r\n    // this.nativeStorage.getItem('isMute').then(data => this.isMute = data);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad PictureAnalisysPage');\r\n    return this.takePicture();\r\n  }\r\n\r\n  async takePicture(): Promise<any> {\r\n    const loading = this.loadingCtrl.create({\r\n      content: `${this.loading} ...`\r\n    });\r\n    let descriptionAnalyzedImage;\r\n    loading.present();\r\n\r\n    this.isSpeak = false;\r\n    this.imageDescription = '';\r\n    try {\r\n      let picture = await this.cameraProvider.getPictureFromCamera();\r\n      if (picture) {\r\n        this.setPicture(picture); // picture is the temporary path\r\n        this.cognitiveService.analyzeImage(picture).subscribe((data) => {\r\n          loading.dismiss();\r\n          descriptionAnalyzedImage = data.description.captions[0].text;\r\n          this.imageDescription = descriptionAnalyzedImage;\r\n        }, (error) => {\r\n          loading.dismiss();\r\n          this.error = `Error: ${JSON.stringify(error)}`;\r\n        });\r\n      }\r\n    } catch(error) {\r\n      loading.dismiss();\r\n      this.error = `Error: ${JSON.stringify(error)}`;\r\n      console.error(this.error);\r\n    }\r\n  }\r\n\r\n  getBase64(file: any, cb: any): void {\r\n    const self = this;\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function () {\r\n        cb(reader.result);\r\n    };\r\n    reader.onerror = function (error) {\r\n        console.log('Error: ', error);\r\n        self.error = `${JSON.stringify(error)}`;\r\n    };\r\n  }\r\n\r\n  setPicture(picture: string){\r\n    this.picture = \"data:image/jpeg;base64,\" + picture;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/picture-analisys/picture-analisys.ts","import { Injectable } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera';\r\n\r\n@Injectable()\r\nexport class CameraProvider {\r\n\r\n  constructor(private camera: Camera) {}\r\n\r\n  getPictureFromCamera(): Promise<any> {\r\n    return this.getImage(this.camera.PictureSourceType.CAMERA);\r\n  }\r\n\r\n  private getImage(pictureSourceType, quality = 50, saveToPhotoAlbum = false): Promise<any> {\r\n    const options: CameraOptions = {\r\n      quality,\r\n      saveToPhotoAlbum,\r\n      sourceType: pictureSourceType,\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      encodingType: this.camera.EncodingType.JPEG\r\n    };\r\n    return this.camera.getPicture(options);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/camera/camera.provider.ts","import { Component, OnInit, Output, EventEmitter }  from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { LoadingController, ViewController } from 'ionic-angular';\r\n\r\nimport { QuestionService } from '../../../providers/form/question.service'\r\n\r\nimport { Question, EventBody, QuestionBody,ActionOptions } from '../../../models'\r\n\r\nimport { QuestionControlService } from '../../../providers/form/question-control.service'\r\nimport { DiagnosticsService } from '../../../providers/diagnostics/diagnostic.service'\r\n\r\nimport { LoaderConfigs } from './../../loaders/loaders';\r\nimport { QuestionEventMapper } from '../../../mappers/event-mapper.service'\r\n\r\nconst ERROR_NO_EVENT_TO_TRIGGER = \"No event was passed to the trigger\";\r\nconst UNTITLED_QUESTIONNAIRE = 'Untitled Questionnaire';\r\n/**\r\n * FORM COMPONENT\r\n */\r\n@Component({\r\n    selector: 'app-form',\r\n    templateUrl: 'FormBuilder.component.html',\r\n    styles: ['./FormBuilder.component.scss']\r\n  })\r\nexport class FormBuilder implements OnInit{\r\n    @Output() changeEvent: EventEmitter<any> = new EventEmitter();\r\n    questions: Question[] = [];    \r\n    form: FormGroup;\r\n    payLoad = '';\r\n    title = '';\r\n    hasSubmit: boolean = true;\r\n\r\n    constructor(private questionControlService: QuestionControlService, \r\n        public questionService: QuestionService, \r\n        public diagnosticsService: DiagnosticsService, \r\n        public loadingCtrl: LoadingController, \r\n        public eventMapper: QuestionEventMapper,\r\n        public viewCtrl : ViewController){}\r\n\r\n    ngOnInit() {\r\n        this.listenToQuestionEvents();\r\n        let params = this.viewCtrl.getNavParams();\r\n        if(params && params.data) {\r\n            this.getForm(params.data.form);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Submit data to get action back from server, in this case: Diagnostic\r\n     */\r\n    onSubmit(): void {\r\n        let loading = this.loadingCtrl.create(LoaderConfigs.submit);\r\n        this.hasSubmit = false;\r\n        this.questions=[];\r\n        loading.present();\r\n        \r\n        this.diagnosticsService.getDiagnostic(this.form.value).subscribe((res) => {\r\n            if(res && res.data) this.payLoad = res;\r\n            loading.dismiss();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listener for the change event of a df-question\r\n     */\r\n    listenToQuestionEvents(): void {\r\n        //listen for the event from df-question\r\n        this.changeEvent.subscribe((eventBody: EventBody) => {\r\n\r\n            if(!eventBody) throw ERROR_NO_EVENT_TO_TRIGGER;\r\n            let eventTarget = eventBody.question.event.target;\r\n            let targetQuestion = this.getQuestion(eventTarget);\r\n            let options: ActionOptions = {\r\n                event: eventBody.question.event.type || \"visibility\",\r\n                action: eventBody.question.event.action || \"visible\",\r\n                target: targetQuestion\r\n            }\r\n            let newQuestion = this.eventMapper.applyAction(options);\r\n            this.updateQuestion(targetQuestion.key, newQuestion);\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Get a specific form by name\r\n     * \r\n     * Questionnaire names -> 'flu', 'hd', 'mh' and 'watson'\r\n     * @param option A questionnaire name\r\n     */\r\n    getForm(option: string): void {\r\n        let loading = this.loadingCtrl.create(LoaderConfigs.loading);\r\n        loading.present();\r\n        this.questionService.makeForm(option).subscribe((questionnaire: QuestionBody) => {\r\n            this.title = questionnaire.additional_information.title ? questionnaire.additional_information.title : UNTITLED_QUESTIONNAIRE;\r\n            this.form = this.questionControlService.toFormGroup(questionnaire.questions);\r\n            this.questions = questionnaire.questions;\r\n            this.hasSubmit = true;\r\n            this.payLoad = '';\r\n            loading.dismiss();\r\n        }, (error) => {\r\n            loading.dismiss();\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * *****************\r\n     * QUESTIONS UTILITY METHODS \r\n     * *****************\r\n     */\r\n\r\n    /**\r\n     * Returns a question by key\r\n    * @param key question key\r\n    * @return A Question\r\n    */\r\n    getQuestion(key: string|number): Question {\r\n        for(var i = 0; i < this.questions.length; i++) {\r\n            if(this.questions[i].key === key){\r\n                return this.questions[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Update a specific question\r\n    * @param key question key\r\n    */\r\n    updateQuestion(key: string|number, newQuestion: Question): void {\r\n        for(var i = 0; i < this.questions.length; i++) {\r\n            if(this.questions[i].key === key){\r\n                this.questions[i] = newQuestion;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear the form\r\n     */\r\n    clear(): void {\r\n        this.questions = [];\r\n        this.hasSubmit = false;\r\n        this.payLoad = '';\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/formbuilder/Form/FormBuilder.component.ts","import { load } from 'webdnn';\r\nimport { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/map';\r\nimport { QuestionMapper } from './../../mappers/question-mapper.service';\r\nimport { server } from './../../app/server.connection';\r\nimport { QuestionBody } from './../../models/form/questions/questionbody.model';\r\n\r\nconst SERVER_URL = server.url;\r\n/**\r\n * Connect to REST API\r\n */\r\n@Injectable()\r\nexport class QuestionService {\r\n\r\n    constructor(public http: Http, public questionMapper: QuestionMapper){\r\n        load('./../../assets/neural_network/output').then(runner => {\r\n            console.log('loaded');\r\n            console.log(runner.backendName);\r\n            console.log(runner.inputs);\r\n            console.log(runner.outputs);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Make a Questionnaire form of a certain type\r\n     * \r\n     * Types -> 'flu', 'hd', 'mh' and 'watson'\r\n     * @param option The name of the Questionnaire\r\n     * @return An Observable of a QuestionBody object\r\n     */\r\n    makeForm(option: string): Observable<QuestionBody> {\r\n        let fn;\r\n        switch(option) {\r\n            case 'flu': // Flu Diagnosis\r\n                //build the form and load the questions\r\n                fn = this.getFluQuestions();\r\n                break;\r\n            case 'hd':// Heart Disease Diagnosis\r\n                fn = this.getHeartDiseaseQuestions();\r\n                break;\r\n            case 'mh': // Mental Health Depression Diagnosis\r\n                fn = this.getMentalHealthQuestions();\r\n                break;\r\n            case 'watson': // Watson Discovery\r\n                fn = this.getWatsonQuestions();\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return fn;\r\n    }\r\n\r\n    /**\r\n     * Get flu questionnaire metadata\r\n     * \r\n     * @return An Observable of QuestionBody object\r\n     */\r\n    private getFluQuestions(): Observable<QuestionBody> {\r\n        return this.http.get(SERVER_URL + '/questions/flu').map((res) => this.questionMapper.map(res));\r\n    }\r\n\r\n    /**\r\n     * Get Heart Disease questionnaire metadata\r\n     * \r\n     * @return An Observable of QuestionBody object\r\n     */\r\n    private getHeartDiseaseQuestions(): Observable<QuestionBody> {\r\n        return this.http.get(SERVER_URL + '/questions/heartdisease').map((res) => this.questionMapper.map(res));\r\n    }\r\n    /**\r\n     * Get Heart Disease questionnaire metadata\r\n     * \r\n     * @return An Observable of QuestionBody object\r\n     */\r\n    private getMentalHealthQuestions(): Observable<QuestionBody> {\r\n        return this.http.get(SERVER_URL + '/questions/mentalhealth').map((res) => this.questionMapper.map(res));\r\n    }\r\n\r\n    /**\r\n     * Get Watson questionnaire metadata\r\n     * \r\n     * @return An Observable of QuestionBody object\r\n     */\r\n    private getWatsonQuestions(): Observable<QuestionBody> {\r\n        return this.http.get(SERVER_URL + '/questions/askwatson').map((res) => this.questionMapper.map(res));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/form/question.service.ts","import { Injectable } from '@angular/core';\r\nimport { DropdownQuestion, ToggleQuestion, TextboxQuestion, QuestionBody, Question } from './../models';\r\n\r\n@Injectable()\r\nexport class QuestionMapper {\r\n    constructor(){}\r\n\r\n    /**\r\n     * Question Mapper\r\n     * @param res response from http request\r\n     */\r\n    map(res: any): QuestionBody {\r\n        let response = res.json();\r\n        let questions: Question[] = [];\r\n        let q = response.questions;\r\n        let addInfo = response.additional_information || { title: \"\" };\r\n        //traverse fields\r\n        for(var i = 0; i < q.length; i++){\r\n            const field = q[i];\r\n            const controlType = q[i].controlType || \"\";\r\n            //create specific question type\r\n            let question = this.mapToQuestion(controlType, field);\r\n            questions.push(question);\r\n        }\r\n        //return the components in the right order\r\n        return {\r\n            questions: questions.sort((a, b) => a.order - b.order),\r\n            additional_information: addInfo\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Create a Question object of some type\r\n     * \r\n     * Types -> 'textbox', 'textarea', 'dropdown' and 'toggle'\r\n     * @param controlType Type of question\r\n     * @param question <Question> Object with meta information about the question\r\n     * @return Question Object of some type\r\n     */\r\n    mapToQuestion(controlType:string, question: any): Question {\r\n        let cQuestion: Question = null;\r\n        switch(controlType){\r\n            case 'textbox':\r\n                let textBox = new TextboxQuestion(question);\r\n                cQuestion = textBox;\r\n                break;\r\n            case 'textarea':\r\n                let textArea = new TextboxQuestion(question);\r\n                cQuestion = textArea;\r\n                break;\r\n            case 'dropdown':\r\n                let dropdownField = new DropdownQuestion(question);\r\n                cQuestion = dropdownField\r\n                break;\r\n            case 'toggle':\r\n                let toggle = new ToggleQuestion(question);\r\n                cQuestion = toggle;\r\n                break;\r\n            default:\r\n                cQuestion = new Question(question);\r\n                break;\r\n        }\r\n        return cQuestion;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/mappers/question-mapper.service.ts","import { Injectable }   from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { Question } from './../../models/form/questions/question.model';\r\n\r\n/**\r\n * Convert metadata to FormGroup object\r\n */\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  /**\r\n   * Transform an Array of Questions into a FormGroup\r\n   * @param questions Array of Questions\r\n   * @return A FormGroup\r\n   */\r\n  toFormGroup(questions: Question[] ): FormGroup {\r\n    let group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = this.toFormControl(question);\r\n    });\r\n    \r\n    return new FormGroup(group);\r\n  }\r\n\r\n  /**\r\n   * Transform one Question into a FormControl\r\n   * @param question Question object\r\n   * @return A FormControl\r\n   */\r\n  toFormControl(question: Question): FormControl {\r\n    return question.required ? new FormControl(question.value || '', Validators.required) : new FormControl(question.value || '');\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/form/question-control.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { server } from './../../app/server.connection';\r\n\r\nconst SERVER_URL = server.url;\r\n\r\n@Injectable()\r\nexport class DiagnosticsService {\r\n\r\n    constructor(public http: Http){}\r\n    \r\n    getDiagnostic(input): Observable<any> {\r\n        // HEART DISEASE\r\n        if(input.chol) {\r\n            return this.http.post(SERVER_URL + '/questions/heartdisease/diagnostic', input).map((res: Response) => res.json());\r\n        }\r\n        // WATSON DISCOVERY\r\n        if(input.text) {\r\n            return this.http.post(SERVER_URL + '/questions/discoverwatson', input).map((res: Response) => res.json());\r\n        }\r\n        // MENTAL HEALTH\r\n        if(input.question1) {\r\n            return this.http.post(SERVER_URL + '/questions/mentalhealth/diagnostic', input).map((res: Response) => res.json());\r\n        }\r\n        // FLU \r\n        return this.http.post(SERVER_URL + '/questions/flu/diagnostic', input).map((res: Response) => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/diagnostics/diagnostic.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Question, ActionOptions } from './../models';\r\n// errors\r\nconst ERROR_NO_PARAMETER = \"Event parameter or type is missing\";\r\nconst ERROR_NO_MATCH_ACTION = \"This action does not match any possible action\";\r\n\r\nenum Events {\r\n    Visibility = 'visibility'\r\n}\r\nenum Actions {\r\n    Visible = 'visible',\r\n    Hidden = 'hidden'\r\n}\r\n\r\n@Injectable()\r\nexport class QuestionEventMapper {\r\n\r\n    constructor() {}\r\n\r\n    /**\r\n     * Apply events to questions\r\n     * @param options <ActionOptions> Action options with meta information about the event, the action and the target\r\n     */\r\n    applyAction(options: ActionOptions): Question {\r\n        if(!options.event) throw ERROR_NO_PARAMETER;\r\n        let event = options.event;\r\n        let question = options.target;\r\n        // Visibility Event\r\n        if(options.event == Events.Visibility) {\r\n            if(question[event] == Actions.Hidden) {\r\n                question[event] = Actions.Visible;\r\n            } else if(question[event] == Actions.Visible){\r\n                question[event] = Actions.Hidden;\r\n            } else {\r\n                throw ERROR_NO_MATCH_ACTION;\r\n            }\r\n        }\r\n\r\n        //TODO other events\r\n\r\n        return question;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mappers/event-mapper.service.ts","// Copyright (c) 2017 Tracktunes Inc\r\n\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Injectable } from '@angular/core';\r\nimport { formatUnixTimestamp, DoubleBufferSetter, WavFile, downloadBlob, Filesystem } from '../../models';\r\nimport { WebAudioRecorder } from './recorder';\r\nimport { AudioContextGenerator } from '../';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n// make this a multiple of PROCESSING_BUFFER_LENGTH (from record.ts)\r\n// export const WAV_CHUNK_LENGTH: number = 4096;\r\n// export const WAV_CHUNK_LENGTH: number = 262144;\r\nexport const WAV_CHUNK_LENGTH: number = 131072;\r\n\r\n// pre-allocate the double chunk buffers used for saving to DB\r\nconst WAV_CHUNK1: Int16Array = new Int16Array(WAV_CHUNK_LENGTH);\r\nconst WAV_CHUNK2: Int16Array = new Int16Array(WAV_CHUNK_LENGTH);\r\n\r\n/**\r\n * Audio Record functions based on WebAudio.\r\n * @class WebAudioRecorder\r\n */\r\n@Injectable()\r\nexport class WavRecorder extends WebAudioRecorder {\r\n    private setter: DoubleBufferSetter;\r\n    private nChunksSaved: number;\r\n    private filePath: string;\r\n    // Observable string sources\r\n    private emitChangeSource = new Subject<any>();\r\n    // Observable string streams\r\n    listenBlobs = this.emitChangeSource.asObservable();\r\n\r\n    // this is how we signal\r\n    constructor(public audioContextGenerator: AudioContextGenerator,public platform: Platform) {\r\n        super(audioContextGenerator, platform);\r\n        console.log('constructor()');\r\n        this.filePath = null;\r\n        this.setter = new DoubleBufferSetter(WAV_CHUNK1, WAV_CHUNK2, () => {\r\n            // THIS CALLBACK IS CALLED MULTIPLE TIMES WHILE THE AUDIO IS BEING RECORDED\r\n            // TODO remove saveWavFileChunk from this callback and maybe replace for a debugging log to see activeBuffer change\r\n            this.saveWav(this.setter.activeBuffer).subscribe(null, (err: any) => {\r\n                console.error('Error in RecordWav.setter(): ' + err);\r\n            });\r\n            // console.log('Recording: ' + this.setter.bufferIndex);\r\n        });\r\n        this.nChunksSaved = 0;\r\n    }\r\n\r\n    /**\r\n     * Precondition: Pcm is clipped (?)\r\n     * valueCB receives the inputBuffer value clipped (-1, 1) from onAudioProcess\r\n     * and setter.setNext calls saveWavFileChunk through swap() method\r\n     */\r\n    protected valueCB(pcm: number): void {\r\n        this.setter.setNext(pcm < 0 ? pcm * 0x8000 : pcm * 0x7fff);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public getFilePath(): string {\r\n        return this.filePath;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    public unloadRecordedFile(): void {\r\n        this.filePath = null;\r\n    }\r\n\r\n    // Service message commands\r\n    private emit(blob: Blob) {\r\n        this.emitChangeSource.next(blob);\r\n    }\r\n\r\n    /**\r\n     * Save the next wav file chunk\r\n     * TODO change this method in a way i don't save chunks, but the whole file in the end of recording from buffer data\r\n     * @return {Observable<void>}\r\n     */\r\n    private saveWav(arr: Int16Array): Observable<File | Blob> {\r\n        console.log('saveWav(arr.size=' + arr.length + ', nSamples: ' + this.nRecordedSamples + ')');\r\n        let src: Observable<File | Blob> = Observable.create((observer) => {\r\n            if(this.nChunksSaved == 0) {\r\n                WavFile.createWavFile(this.filePath, arr, this.audioContext).subscribe((blob: Blob) => {\r\n                    this.nChunksSaved = 1;\r\n                    this.emit(blob);\r\n                    observer.next(blob);\r\n                    observer.complete();\r\n                },(err1: any) => {\r\n                    observer.error(err1);\r\n                });\r\n            } else {\r\n                WavFile.appendToWavFile(arr, this.nRecordedSamples - arr.length).subscribe((blob: Blob) => {\r\n                    this.nChunksSaved++;\r\n                    // emit blob every 100 chunks\r\n                    // if(this.nChunksSaved % 2 == 0) {\r\n                    // }\r\n                    this.emit(blob);\r\n                    observer.next(blob);\r\n                    observer.complete();\r\n                },(err1: any) => {\r\n                    observer.error(err1);\r\n                });\r\n\r\n            }\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * Start recording\r\n     */\r\n    public start(): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            super.start().then(() => {\r\n                const dateCreated: number = Date.now();\r\n                const displayDateCreated: string = formatUnixTimestamp(dateCreated);\r\n                const filePath: string = '/' + displayDateCreated;\r\n                this.filePath = filePath;\r\n                resolve();\r\n            }, (error) => {\r\n                console.log('ERROR AT -> WAV-RECORDER START()');\r\n                reject();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Stop recording and save the last chunk.\r\n     * Precondition: called start() already\r\n     * // TODO save file from activeBuffer data, no need to keep saving file chunks with cordova file plugin and appending\r\n     *\r\n     * @return {Observable<void>}\r\n     */\r\n    public stop(): Observable<File | Blob> {\r\n        console.log('WavRecorder:stop() @ ' + this.setter.bufferIndex + ', len: ' + this.setter.activeBuffer.subarray(0, this.setter.bufferIndex).length);\r\n        this.reset();\r\n        let src: Observable<File | Blob> = Observable.create((observer) => {\r\n          this.saveWav(this.setter.activeBuffer.subarray(0, this.setter.bufferIndex)).subscribe((formDataFile: File | Blob) => {\r\n                console.log(\"WavFile:saveWav() @ Saved\");\r\n                console.log('form data ' + JSON.stringify(formDataFile));\r\n                this.nChunksSaved = 0;\r\n                this.setter.reset();\r\n                //downloadBlob(formDataFile, \"somewav.wav\");\r\n                if(this.audioContext.close) {\r\n                  this.audioContext.close().then(() => {\r\n                    console.log('AUDIO CONTEXT CLOSED');\r\n                  });\r\n                } else if(this.audioContext.state == \"running\") {\r\n                  this.audioContext.suspend().then(() => {\r\n                    console.log('AUDIO CONTEXT SUSPENDED');\r\n                  });\r\n                }\r\n                WavFile.clearBlob();\r\n                // observer.next(formDataFile);\r\n                observer.next();\r\n                observer.complete();\r\n\r\n            },(err: any) => {\r\n                observer.error(err);\r\n            });\r\n        });\r\n\r\n        return src;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/web-audio/wav-recorder.ts","// Copyright (c) 2017 Tracktunes Inc\r\ndeclare let audioinput: any;\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { formatTime } from '../../models';\r\nimport { AudioContextGenerator } from '../';\r\nimport { Platform } from 'ionic-angular';\r\n\r\n/** @const {string} Heartbeat clock's ID of function to run periodically */\r\nconst RECORDER_CLOCK_FUNCTION_NAME: string = 'recorder';\r\n\r\n\r\n/**\r\n * @const {string} Length of script processing buffer - (a) this must be a\r\n * power of 2; (b) the smaller this is, the more accurately we track time.\r\n */\r\n// const PROCESSING_BUFFER_LENGTH: number = 19456;\r\n// const PROCESSING_BUFFER_LENGTH: number = 16384;\r\nconst PROCESSING_BUFFER_LENGTH: number = 8192;\r\n// const PROCESSING_BUFFER_LENGTH: number = 1024;\r\n\r\n/** @const {number}  Waiting time between checks that WAA is initialized */\r\nconst WAIT_MSEC: number = 50;\r\n// statuses\r\nexport enum RecordStatus {\r\n    // uninitialized means we have not been initialized yet\r\n    UNINITIALIZED_STATE,\r\n    // error occured - no indexedDB available\r\n    NO_DB_ERROR,\r\n    // error occured - no AudioContext\r\n    NO_CONTEXT_ERROR,\r\n    // error occured - no microphone\r\n    NO_MICROPHONE_ERROR,\r\n    // error occured - no getUserMedia()\r\n    NO_GETUSERMEDIA_ERROR,\r\n    // error occured - getUserMedia() has crashed\r\n    GETUSERMEDIA_ERROR,\r\n    // normal operation\r\n    READY_STATE\r\n}\r\nfunction _normalizeAudio (pcmData) {\r\n  for (var i = 0; i < pcmData.length; i++) {\r\n      pcmData[i] = parseFloat(pcmData[i]) / 32767.0;\r\n  }\r\n  // If last value is NaN, remove it.\r\n  if (isNaN(pcmData[pcmData.length - 1])) {\r\n      pcmData.pop();\r\n  }\r\n  return pcmData;\r\n}\r\n// Add some web audio missing type definitions: See http://stackoverflow.com/..\r\n// ..questions/32797833/typescript-web-audio-api-missing-definitions\r\n\r\n// interface MediaStreamAudioDestinationNode extends AudioNode {\r\n//     stream: MediaStream;\r\n// }\r\n\r\n// interface AudioContext {\r\n//     createMediaStreamDestination: () => any;\r\n// }\r\n\r\ninterface Gain {\r\n    value: number;\r\n}\r\n\r\ninterface AudioGainNode extends AudioNode {\r\n    gain: Gain;\r\n}\r\n\r\n/**\r\n * Audio recording functions using Web Audio API\r\n * @class WebAudioRecorder\r\n */\r\n@Injectable()\r\nexport abstract class WebAudioRecorder {\r\n    private sourceNode: MediaStreamAudioSourceNode;\r\n    private audioGainNode: AudioGainNode;\r\n    private scriptProcessorNode: ScriptProcessorNode;\r\n    private nPeaksAtMax: number;\r\n    private nPeakMeasurements: number;\r\n    protected nRecordedSamples: number;\r\n    public status: RecordStatus;\r\n    public sampleRate: number;\r\n    // isInactive means not recording and not paused\r\n    public isInactive: boolean;\r\n    // isRecording means actively recording and not paused\r\n    public isRecording: boolean;\r\n    public currentVolume: number;\r\n    public displayTime: string;\r\n    public maxVolumeSinceReset: number;\r\n    public percentPeaksAtMax: string;\r\n    public audioContext: AudioContext;\r\n\r\n    public nClipped: number;\r\n    public isMobileAudioInput: boolean;\r\n\r\n    protected abstract valueCB(pcm: number): void;\r\n\r\n    // this is how we signal\r\n    constructor(public audioContextGenerator: AudioContextGenerator, public platform: Platform) {\r\n        console.log('constructor()');\r\n        const self = this;\r\n        this.nClipped = 0;\r\n\r\n        this.status = RecordStatus.UNINITIALIZED_STATE;\r\n        this.isMobileAudioInput = false;\r\n        window.addEventListener('audioinput', (event) => {\r\n            self.onAudioProcess(event);\r\n        }, false);\r\n    }\r\n\r\n    /**\r\n     * Wait indefinitely until DB is ready for use, via an observable.\r\n     * @returns Observable<void> - Observable that emits when ready for use.\r\n     */\r\n    public waitForWAA(): Observable<void> {\r\n        // NOTE:this loop should only repeat a handful of times or so\r\n        let source: Observable<void> = Observable.create((observer) => {\r\n            const repeat: () => void = () => {\r\n                console.log('waitForWAA:repeat()');\r\n                if (this.status !== RecordStatus.UNINITIALIZED_STATE) {\r\n                    observer.next();\r\n                    observer.complete();\r\n                }\r\n                else {\r\n                    setTimeout(repeat, WAIT_MSEC);\r\n                }\r\n            };\r\n            repeat();\r\n        });\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * Initialize audio, get it ready to record\r\n     * @returns void\r\n     */\r\n    private initAudio(): void {\r\n        console.log('initAudio(): SAMPLE RATE: ' + this.sampleRate);\r\n        var self = this;\r\n        const getUserMediaOptions: Object = {\r\n            video: false,\r\n            audio: true\r\n        };\r\n\r\n        if(this.platform.is('ios') || this.platform.is('android') || this.platform.is('cordova')){\r\n            if(this._hasAudioInput()){\r\n                console.log('Using audioinput');\r\n                this.isMobileAudioInput = true;\r\n                try {\r\n                    let captureCfg = {\r\n                        sampleRate: 16000,\r\n                        bufferSize: PROCESSING_BUFFER_LENGTH,\r\n                        channels: 1,\r\n                        format: audioinput.FORMAT.PCM_16BIT,\r\n                        audioSourceType: audioinput.AUDIOSOURCE_TYPE.DEFAULT\r\n                    };\r\n                    audioinput.initialize(captureCfg, () => {\r\n                        audioinput.checkMicrophonePermission((hasPermission) => {\r\n                            if(hasPermission){\r\n                                console.warn('Already have permission to record');\r\n                                // startRecording\r\n                                this.connectNodes();\r\n                            } else {\r\n                                console.warn('No permission to record yet');\r\n                                console.warn('Asking...');\r\n                                audioinput.getMicrophonePermission((hasPermission, message) => {\r\n                                    if(hasPermission) {\r\n                                        console.warn('User granted permission to record');\r\n                                        this.connectNodes();\r\n                                    } else {\r\n                                        console.warn('User denied permission to record');\r\n                                        this.status = RecordStatus.GETUSERMEDIA_ERROR;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    });\r\n                } catch (err) {\r\n                    this.status = RecordStatus.GETUSERMEDIA_ERROR;\r\n                    const msg: string = 'initAudio(old2): err: ' +\r\n                          err + ', code: ' + err.code;\r\n                    // alert(msg);\r\n                    console.log(msg);\r\n                }\r\n            }\r\n        } else {\r\n            this.isMobileAudioInput = false;\r\n            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n                // We're in mozilla but not yet in chrome\r\n                // new getUserMedia is available, use it to get microphone stream\r\n                // console.log('Using NEW navigator.mediaDevices.getUserMedia');\r\n\r\n                navigator.mediaDevices.getUserMedia(getUserMediaOptions)\r\n                    .then((stream: MediaStream) => {\r\n                        this.connectNodes(stream);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        this.status = RecordStatus.NO_MICROPHONE_ERROR;\r\n                        const msg: string = 'initAudio(new): err: ' + err + ', code: ' + err.code;\r\n                        console.log(msg);\r\n                    });\r\n            }\r\n            else {\r\n                // This is what is called if we're in chrome / chromium\r\n                // console.log('Using OLD navigator.getUserMedia (new not there)');\r\n                navigator.getUserMedia = navigator.getUserMedia ||\r\n                    navigator.webkitGetUserMedia ||\r\n                    navigator.mozGetUserMedia;\r\n                if (navigator.getUserMedia) {\r\n                    // old getUserMedia is available, use it\r\n                    try {\r\n                        navigator.getUserMedia(getUserMediaOptions,(stream: MediaStream) => {\r\n                            this.connectNodes(stream);\r\n                        },\r\n                        (err: any) => {\r\n                            this.status = RecordStatus.NO_MICROPHONE_ERROR;\r\n                            const msg: string = 'initAudio(old1): err: ' + err + ', code: ' + err.code;\r\n                            console.log(msg);\r\n                        });\r\n                    }\r\n                    catch (err) {\r\n                        this.status = RecordStatus.GETUSERMEDIA_ERROR;\r\n                        const msg: string = 'initAudio(old2): err: ' + err + ', code: ' + err.code;\r\n                        console.log(msg);\r\n                    }\r\n                } else {\r\n                    // neither old nor new getUserMedia are available\r\n                    console.warn('initAudio() Error: no getUserMedia');\r\n                    this.status = RecordStatus.NO_GETUSERMEDIA_ERROR;\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {AudioProcessingEvent}\r\n     * @returns void\r\n     */\r\n    private onAudioProcess(processingEvent: AudioProcessingEvent | Event): void {\r\n        // console.log('onAudioProcess() ' + this.isRecording);\r\n        if(this.isMobileAudioInput) {\r\n            // DO MOBILE STUFF\r\n            // console.log('mobile onAudioProcess() -> ' + (<any>processingEvent).data.length); // DEBUG ONLY\r\n            if((<any>processingEvent) && (<any>processingEvent).data) {\r\n                let inputData: number[] = (<any>processingEvent).data;\r\n                let i: number;\r\n                let value: number;\r\n                let absValue: number;\r\n                this.currentVolume = 0;\r\n                let audioBuffer = this.audioContext.createBuffer(1, (inputData.length / 1), this.audioContext.sampleRate);\r\n                //let buffer = _normalizeAudio(inputData);\r\n                let buffer = []\r\n                for(i = 0; i < PROCESSING_BUFFER_LENGTH; i++) {\r\n                  value = inputData[i];\r\n                //   const clippedValue: number = value / 32767.0;\r\n                  const clippedValue: number = Math.max(-1.0, Math.min(1.0, value));\r\n                  if (value !== clippedValue) {\r\n                    this.nClipped++;\r\n                  }\r\n                  if (this.isRecording) {\r\n                    buffer.push(clippedValue);\r\n                    this.valueCB(clippedValue);\r\n                    this.nRecordedSamples++;\r\n                  }\r\n                }\r\n                // Listen to myself for debugging purposes\r\n                if(this.isRecording) {\r\n                    audioBuffer.getChannelData(0).set(buffer);\r\n                    let source = this.audioContext.createBufferSource();\r\n                    source.buffer = audioBuffer;\r\n                    source.connect(this.audioContext.destination);\r\n                    source.start(1);\r\n                }\r\n            }\r\n            return;\r\n        } \r\n        // console.log('browser onAudioProcess() ->', processingEvent);\r\n        let inputBuffer: AudioBuffer = (<AudioProcessingEvent>processingEvent).inputBuffer;\r\n        let outputBuffer: AudioBuffer = (<AudioProcessingEvent>processingEvent).outputBuffer;\r\n        let inputData: Float32Array = inputBuffer.getChannelData(0);\r\n        let outputData: Float32Array = outputBuffer.getChannelData(0);\r\n        let i: number;\r\n        let value: number;\r\n        let absValue: number;\r\n        // put the maximum of current buffer into this.currentVolume\r\n        this.currentVolume = 0;\r\n        for (i = 0; i < PROCESSING_BUFFER_LENGTH; i++) {\r\n            // value is the float value of the current PCM sample\r\n            // it is expected to be in [-1, 1] but goes beyond that\r\n            // sometimes\r\n            value = inputData[i];\r\n            const clippedValue: number = Math.max(-1.0, Math.min(1.0, value));\r\n            if (value !== clippedValue) {\r\n                this.nClipped++;\r\n            }\r\n            // absValue is what we use to monitor volume = abs(value)\r\n            absValue = Math.abs(clippedValue);\r\n            // keep track of volume using abs value\r\n            if (absValue > this.currentVolume) {\r\n                this.currentVolume = absValue;\r\n            }\r\n            // fill up double-buffer active buffer if recording (and\r\n            // save every time a fill-up occurs)\r\n            // if (this.valueCB && this.isRecording) {\r\n            if (this.isRecording) {\r\n                // outputData[i] = clippedValue;\r\n                this.valueCB(clippedValue);\r\n                this.nRecordedSamples++;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create audioGainNode & scriptProcessorNode\r\n     * @returns void\r\n     */\r\n    private createNodes(): void {\r\n        console.log('createNodes()');\r\n        this.audioContext = this.audioContextGenerator.createAudioContext();\r\n        if(this.audioContext) {\r\n            this.sampleRate = this.audioContext.sampleRate;\r\n            // create the gainNode\r\n            this.audioGainNode = this.audioContext.createGain();\r\n            // create and configure the scriptProcessorNode\r\n            this.scriptProcessorNode = this.audioContext.createScriptProcessor(PROCESSING_BUFFER_LENGTH, 1, 1);\r\n            this.scriptProcessorNode.onaudioprocess = (processingEvent: AudioProcessingEvent): any => {\r\n                this.onAudioProcess(processingEvent);\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Create the following nodes:\r\n     * this.sourceNode (createMediaStreamSourceNode)\r\n     * |--> this.gainNode (createGain)\r\n     *      |--> this.scriptProcessorNode (createScriptProcessor)\r\n     *           |--> MediaStreamAudioDestinationNode\r\n     * @param {MediaStream} stream the stream obtained by getUserMedia\r\n     * @returns void\r\n     */\r\n    private connectNodes(stream?: MediaStream): void {\r\n        console.log('connectNodes()');\r\n        if(this.isMobileAudioInput) {\r\n            audioinput.start({ bufferSize: PROCESSING_BUFFER_LENGTH, streamToWebAudio: false });\r\n            audioinput.connect(this.audioContext.destination);\r\n            // call the reset() function to normalize state\r\n            this.reset();\r\n            // now, after nodes are connected, we can tell the world we're ready\r\n            this.status = RecordStatus.READY_STATE;\r\n            return;\r\n        }\r\n        // TODO: a check here that this.mediaStream is valid\r\n        // create a source node out of the audio media stream\r\n        // (the other nodes, which do not require a stream for their\r\n        // initialization, are created in this.createNodes())\r\n        this.sourceNode = this.audioContext.createMediaStreamSource(stream);\r\n        // sourceNode (microphone) -> gainNode\r\n        this.sourceNode.connect(this.audioGainNode);\r\n        // gainNode -> scriptProcessorNode\r\n        this.audioGainNode.connect(this.scriptProcessorNode);\r\n        // scriptProcessorNode -> destination\r\n        this.scriptProcessorNode.connect(this.audioContext.destination);\r\n        // call the reset() function to normalize state\r\n        this.reset();\r\n        // now, after nodes are connected, we can tell the world we're ready\r\n        this.status = RecordStatus.READY_STATE;\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // PUBLIC API METHODS\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Reset all peak stats as if we've just started playing audio at\r\n     * time 0. Call this when you want to compute stats from now.\r\n     * @returns void\r\n     */\r\n    public resetPeaks(): void {\r\n        this.maxVolumeSinceReset = 0;\r\n        // at first we're always at 100% peax at max\r\n        this.percentPeaksAtMax = '100.0';\r\n        // make this 1 to avoid NaN when we divide by it\r\n        this.nPeakMeasurements = 1;\r\n        // make this 1 to match nPeakMeasurements and get 100% at start\r\n        this.nPeaksAtMax = 1;\r\n        // we start from zero again\r\n        this.nClipped = 0;\r\n    }\r\n\r\n    /**\r\n     * Start recording\r\n     * @returns void\r\n     */\r\n    public start(): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            // create nodes that do not require a stream in their constructor\r\n            this.createNodes();\r\n            // this call to resetPeaks() also initializes private variables\r\n            this.resetPeaks();\r\n            // grab microphone, init nodes that rely on stream, connect nodes\r\n            this.initAudio();\r\n            this.waitForWAA().subscribe(() => {\r\n                // reset peaks again when WAA is ready\r\n                this.resetPeaks();\r\n                this.nRecordedSamples = 0;\r\n                this.isRecording = true;\r\n                this.isInactive = false;\r\n                resolve();\r\n            }, (error) => {\r\n                console.log('ERROR AT -> RECORDER START()');\r\n                reject();\r\n            });\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Pause recording\r\n     * @returns void\r\n     */\r\n    public pause(): void {\r\n        this.isRecording = false;\r\n    }\r\n\r\n    /**\r\n     * Resume recording\r\n     * @returns void\r\n     */\r\n    public resume(): void {\r\n        this.isRecording = true;\r\n    }\r\n\r\n    /**\r\n     * Stop recording, reset all for next recording.\r\n     * @returns void\r\n     */\r\n    protected reset(): void {\r\n        const self = this;\r\n        this.isRecording = false;\r\n        this.isInactive = true;\r\n        if(this._hasAudioInput() && this.isMobileAudioInput && this.status == RecordStatus.READY_STATE) {\r\n            audioinput.stop(() => {  \r\n                self.isMobileAudioInput = false;\r\n            });\r\n            audioinput.disconnect();\r\n        }\r\n        this.status = RecordStatus.UNINITIALIZED_STATE;\r\n    }\r\n\r\n    /**\r\n     * Returns recording time, in seconds.\r\n     * @returns number\r\n     */\r\n    private getTime(): number {\r\n        return this.isInactive ? 0 : this.nRecordedSamples / this.sampleRate;\r\n    }\r\n\r\n    private _hasAudioInput(): boolean {\r\n        return typeof audioinput !== \"undefined\";\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/web-audio/recorder.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'web-animations-js/web-animations.min';\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import 'webdnn';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { SocketIoModule, SocketIoConfig } from 'ng-socket-io';\r\nimport { Camera } from '@ionic-native/camera';\r\nimport { FileTransfer, FileTransferObject } from '@ionic-native/file-transfer';\r\nimport { TextToSpeech } from '@ionic-native/text-to-speech';\r\nimport { NativeStorage } from '@ionic-native/native-storage';\r\nimport { AppService } from './app.service';\r\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\r\n\r\nimport { MyApp } from './app.component';\r\n\r\nimport { AboutPage } from '../pages/about/about';\r\nimport { ContactPage } from '../pages/contact/contact';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { ChatPage } from '../pages/chat_watson/chat'\r\nimport { PictureAnalisysPage } from '../pages/picture-analisys/picture-analisys';\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\n\r\nimport { FormBuilder } from '../components/formbuilder/Form/FormBuilder.component';\r\nimport { DynamicQuestionComponent } from '../components/formbuilder/Question/DynamicQuestion.component';\r\n\r\nimport { QuestionControlService } from '../providers/form/question-control.service';\r\nimport { QuestionService } from '../providers/form/question.service';\r\nimport { WavRecorder, DiagnosticsService, CameraProvider, CognitiveService, AudioContextGenerator } from '../providers';\r\n\r\nimport { QuestionMapper } from './../mappers/question-mapper.service';\r\nimport { QuestionEventMapper } from './../mappers/event-mapper.service';\r\n\r\n// const config: SocketIoConfig = { url: 'http://localhost:3000', options: {} };\r\nconst config: SocketIoConfig = { url: 'https://imsdiag.herokuapp.com', options: {} };\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    AboutPage,\r\n    ContactPage,\r\n    HomePage,\r\n    TabsPage,\r\n    ChatPage,\r\n    FormBuilder,\r\n    PictureAnalisysPage,\r\n    DynamicQuestionComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    IonicModule.forRoot(MyApp),\r\n    SocketIoModule.forRoot(config)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    ChatPage,\r\n    AboutPage,\r\n    ContactPage,\r\n    HomePage,\r\n    TabsPage,\r\n    FormBuilder,\r\n    PictureAnalisysPage,\r\n    DynamicQuestionComponent\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    FileTransfer,\r\n    SpeechRecognition,\r\n    FileTransferObject,\r\n    NativeStorage,\r\n    TextToSpeech,\r\n    Camera,\r\n    QuestionControlService,\r\n    QuestionService,\r\n    QuestionMapper,\r\n    QuestionEventMapper,\r\n    DiagnosticsService,\r\n    CognitiveService,\r\n    CameraProvider,\r\n    AppService,\r\n    WavRecorder,\r\n    AudioContextGenerator,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 527\n// module chunks = 0","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Platform, LoadingController } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { TabsPage } from '../pages/tabs/tabs';\r\n\r\nimport { CognitiveService } from './../providers/cognitive-services/cognitive.service';\r\nimport { WavRecorder } from './../providers/web-audio/wav-recorder';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp implements OnInit{\r\n  rootPage:any = TabsPage;\r\n  speaking: boolean;\r\n  spokenMessage: string;\r\n  messageSubscription: Subscription;\r\n  debug:string;\r\n  isMobile: Boolean;\r\n  zone;\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen,\r\n    public cognitiveService: CognitiveService,\r\n    public appService: AppService,\r\n    public loadingCtrl: LoadingController,\r\n    public recorder: WavRecorder) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n    // recorder.waitForWAA().subscribe(()=>{\r\n    //   recorder.resetPeaks();\r\n    // });\r\n    this.zone = new NgZone({enableLongStackTrace: false});\r\n    this.isMobile = true;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.messageSubscription = this.cognitiveService.listenMessage.subscribe((message) => {\r\n      this.zone.run(() => {\r\n        // if(message.length > this.spokenMessage.length) {\r\n        // }\r\n        this.spokenMessage += message;\r\n        console.log(`Spoken -----------> ${this.spokenMessage}` );\r\n        const lowerMsg = this.spokenMessage.toLowerCase();\r\n        if(lowerMsg.indexOf('go to') != -1 && lowerMsg.indexOf('heart disease') != -1) {\r\n          // this.goToForm('hd');\r\n          this.appService.emitMessage('hd');\r\n          if(!this.isMobile){\r\n            this.stop(false); // Dont need to stop here when using DEVICE AUDIOINPUT, only need with native SpeechRecognition\r\n          }\r\n        }\r\n        if(lowerMsg.indexOf('go to') != -1 && lowerMsg.indexOf('flu') != -1) {\r\n          this.appService.emitMessage('flu');\r\n          if(!this.isMobile){\r\n            this.stop(false);\r\n          }\r\n        }\r\n      });\r\n      \r\n      if(typeof message == 'string'){\r\n        this.debug = '';\r\n        this.debug += message;\r\n      }\r\n    });\r\n  }\r\n\r\n  \r\n  // ********************************************\r\n  //                MOBILE\r\n  // ********************************************\r\n  // speakStop() {\r\n  //   const self = this;\r\n  //   this.debug = '';\r\n  //   if(!this.speaking) {\r\n  //     this.speaking = true;\r\n  //     this.spokenMessage = '';\r\n  //     const loading = this.loadingCtrl.create({\r\n  //       spinner: 'bubbles',\r\n  //       content: `\r\n  //           <div class=\"custom-spinner-container\">\r\n  //               <div class=\"custom-spinner-box\">\r\n  //                   Analyzing, please wait...\r\n  //               </div>\r\n  //           </div>`,\r\n  //       duration: 100000\r\n  //     });\r\n  //     loading.present();\r\n  //     this.recorder.start().then(() => {\r\n  //       // READY\r\n  //       this.debug += 'READY TO SPEAK';\r\n  //       console.log('READY TO SPEAK');\r\n  //       loading.dismiss()\r\n  //       this.recorder.listenBlobs.subscribe((blob: Blob) => {\r\n  //         console.log('Listening to BLOBS...');\r\n  //         self.cognitiveService.analyseSound(blob).subscribe((data) => {\r\n  //           console.log('**************** analyseSound() @ SUCCESS *****************');\r\n  //           self.debug = '';\r\n  //           self.debug += blob.size + ' -> ';\r\n  //           self.debug += 'Success!!';\r\n  //           console.log(`DATA  ${JSON.stringify(data)}`);\r\n  //           self.cognitiveService.emitMessage(data);\r\n  //           //subs.unsubscribe();\r\n  //         }, (error) => {\r\n  //           self.debug = '';\r\n  //           self.debug += `An Error ocurred: ${JSON.stringify(error)}`;\r\n  //           console.log(error);\r\n  //         });\r\n  //       });\r\n  //     });\r\n  //   } else {\r\n  //     this.stop(false);\r\n  //   }\r\n  // }\r\n  // stop(erase: boolean) {\r\n  //   const self = this;\r\n  //   this.spokenMessage = erase ? '' : this.spokenMessage;\r\n  //   this.speaking = false;\r\n  //   this.debug = '';\r\n  //   let subs = this.recorder.stop().subscribe((file: File | Blob) => {\r\n  //     console.log('FINAL FILE SIZE ->', file.size);\r\n  //     self.debug += 'Stoped! File created';\r\n  //     // TODO send to Azure Bing Speech API by POST\r\n  //     self.debug = '';\r\n  //   }, (err: any) => {\r\n  //     console.log(`ERROR -> , ${JSON.stringify(err)}`);\r\n  //   });\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n  // ********************************************\r\n  //                WEB\r\n  // ********************************************\r\n  speakStop() {\r\n    this.debug = '';\r\n    if(!this.speaking) {\r\n      this.speaking = true;\r\n      this.spokenMessage = '';\r\n      this.cognitiveService.speak();\r\n    } else {\r\n      this.stop(false);\r\n    }\r\n\r\n  }\r\n\r\n  stop(erase: boolean) {\r\n    const self = this;\r\n    this.spokenMessage = erase ? '' : this.spokenMessage;\r\n    this.speaking = false;\r\n    this.debug = '';\r\n    this.cognitiveService.stopSpeaking();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export class ChatUser {\r\n    name: string;\r\n    messages: string[];\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.messages = [];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat_watson/ChatUser.ts","import { ChatUser } from './ChatUser';\r\nimport { ChatMessage } from './ChatMessage';\r\nexport class ChatRoom {\r\n    users: any;\r\n    messages: ChatMessage[];\r\n    constructor() {\r\n        this.users = {};\r\n        this.messages = [];\r\n    }\r\n    addUser (user: ChatUser) {\r\n        this.users[user.name] = user;\r\n    }\r\n    getUserByName (userName: string): ChatUser {\r\n        for(var key in this.users) {\r\n            if(this.users[key] && this.users[key].name == userName) {\r\n                return this.users[key];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    addMessage (userName: string, message: string): void {\r\n        if(!this.users[userName]) throw \"Invalid User\";\r\n        this.users[userName].messages.push(message);\r\n        this.messages.push({userName: userName, message: message, time: new Date() });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat_watson/ChatRoom.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// https-proxy-agent (ignored)\n// module id = 617\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 618\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../../external/ocsp/ocsp (ignored)\n// module id = 619\n// module chunks = 0","import { Observable } from 'rxjs/Rx';\r\nimport { Filesystem, downloadBlob } from '../';\r\n\r\n/**\r\n *\r\n */\r\nexport interface WavInfo {\r\n    nSamples: number;\r\n    sampleRate: number;\r\n    metadata: Metadata;\r\n}\r\n\r\n/** @const {string} Mime type of wav file */\r\nexport const WAV_MIME_TYPE: string = 'audio/wav';\r\n\r\n// internal constants and functions\r\nconst NUMBER_MIME_TYPE: string = 'application/octet-stream';\r\nconst CHUNKSIZE_START_BYTE: number = 4;\r\nconst SAMPLE_RATE_START_BYTE: number = 24;\r\nconst SAMPLE_RATE_END_BYTE: number = SAMPLE_RATE_START_BYTE + 4;\r\nconst SUBCHUNK2SIZE_START_BYTE: number = 40;\r\nconst SUBCHUNK2SIZE_END_BYTE: number = SUBCHUNK2SIZE_START_BYTE + 4;\r\nconst N_HEADER_BYTES: number = 44;\r\n\r\n/**\r\n *\r\n */\r\nfunction sampleToByte(iSample: number): number {\r\n    'use strict';\r\n    return N_HEADER_BYTES + 2 * iSample;\r\n}\r\n\r\n/*\r\n  function byteToSample(iByte: number): number {\r\n  'use strict';\r\n  return iByte / 2 - N_HEADER_BYTES;\r\n  }\r\n*/\r\n\r\nclass BlobFactory {\r\n    parts: any[];\r\n    blob: Blob;\r\n    constructor(){\r\n        this.parts = [];\r\n    }\r\n    append (part): void {\r\n        this.parts.push(part);\r\n        this.blob = undefined;\r\n    }\r\n    getBlob(): Blob {\r\n        if(!this.blob) {\r\n            this.blob = new Blob(this.parts, {type: WAV_MIME_TYPE });\r\n        }\r\n        return this.blob;\r\n    }\r\n    clear(): void {\r\n        this.parts = [];\r\n        this.blob = undefined;\r\n    }\r\n}\r\n\r\n\r\nconst blobFactory: BlobFactory = new BlobFactory();\r\n/**\r\n *\r\n */\r\nfunction makeWavBlobHeaderView(nSamples: number, sampleRate: number): DataView {\r\n    'use strict';\r\n    // see: http://soundfile.sapp.org/doc/WaveFormat/\r\n    const arrayByteLength: number = 2 * nSamples,\r\n          arrayBuffer: ArrayBuffer = new ArrayBuffer(N_HEADER_BYTES),\r\n          headerView: DataView = new DataView(arrayBuffer),\r\n          writeAscii: (dataView: DataView, offset: number, text: string) => void = (dataView: DataView, offset: number, text: string) => {\r\n              const len: number = text.length;\r\n              for (let i: number = 0; i < len; i++) {\r\n                  dataView.setUint8(offset + i, text.charCodeAt(i));\r\n              }\r\n          };\r\n\r\n    //\r\n    // NB: this is single-channel (mono)\r\n    //\r\n\r\n    //   0-4: ChunkId\r\n    writeAscii(headerView, 0, 'RIFF');\r\n    //   4-8: ChunkSize\r\n    headerView.setUint32(4, 36 + arrayByteLength, true);\r\n    //  8-12: Format\r\n    writeAscii(headerView, 8, 'WAVE');\r\n    // 12-16: Subchunk1ID\r\n    writeAscii(headerView, 12, 'fmt ');\r\n    // 16-20: Subchunk1Size\r\n    headerView.setUint32(16, 16, true);\r\n    // 20-22: AudioFormat\r\n    headerView.setUint16(20, 1, true);\r\n    // 22-24: NumChannels\r\n    headerView.setUint16(22, 1, true);\r\n    // 24-28: SampleRate\r\n    headerView.setUint32(24, sampleRate, true);\r\n    // 28-32: ByteRate\r\n    headerView.setUint32(28, sampleRate * 2, true);\r\n    // 32-34: BlockAlign\r\n    headerView.setUint16(32, 2, true);\r\n    // 34-36: BitsPerSample\r\n    headerView.setUint16(34, 16, true);\r\n    // 36-40: Subchunk2ID\r\n    writeAscii(headerView, 36, 'data');\r\n    // 40-44: Subchunk2Size\r\n    headerView.setUint32(40, arrayByteLength, true);\r\n\r\n    return headerView;\r\n} // public static makeWavBlobHeaderView(\r\n\r\nlet AUDIO_CONTEXT: AudioContext;\r\nlet SAMPLE_RATE: number = 0;\r\nlet HEADER_VIEW: DataView;\r\n/**\r\n *\r\n */\r\nexport class WavFile {\r\n    /**\r\n     *\r\n     */\r\n    public static createWavFile(filePath: string, wavData: Int16Array, audioContext: AudioContext): Observable<Blob> {\r\n        console.log('createWavFile(' + filePath + ') - nSamples=' + wavData.length);\r\n        if(!AUDIO_CONTEXT) {\r\n            AUDIO_CONTEXT = audioContext;\r\n            SAMPLE_RATE = AUDIO_CONTEXT.sampleRate;\r\n        }\r\n        const src: Observable<Blob> = Observable.create((observer) => {\r\n            const nSamples: number = wavData.length;\r\n            HEADER_VIEW = makeWavBlobHeaderView(nSamples, SAMPLE_RATE);\r\n            blobFactory.append(HEADER_VIEW);\r\n            blobFactory.append(wavData);\r\n            const blob = blobFactory.getBlob();\r\n            console.log('The blob created -->', blob);\r\n            // downloadBlob(blob, \"somewav.wav\");\r\n            // observer.next(blob);\r\n            observer.next(blob);\r\n            observer.complete();\r\n        });\r\n        return src;\r\n    }\r\n\r\n    public static appendToWavFile(wavData: Int16Array, nPreAppendSample: number): Observable<Blob> {\r\n        const src: Observable<Blob> = Observable.create((observer) => {\r\n            const nSamples: number = nPreAppendSample + wavData.length;\r\n            const subchunk2size: number = 2 * nSamples;\r\n            const chunkSize: number = 36 + subchunk2size;\r\n            let view: DataView = new DataView(new ArrayBuffer(4));\r\n            // this.clearBlob();\r\n            // blobFactory.append(HEADER_VIEW);\r\n            view.setUint32(0, chunkSize, true);\r\n            blobFactory.append(view);\r\n            view.setUint32(0, subchunk2size, true);\r\n            blobFactory.append(view);\r\n            blobFactory.append(wavData);\r\n            const blob = blobFactory.getBlob();\r\n            observer.next(blob);\r\n            observer.complete();\r\n        });\r\n\r\n        return src;\r\n    }\r\n\r\n    public static clearBlob(): void {\r\n        blobFactory.clear();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/wav-file/wav-file.ts","// Copyright (c) 2017 Tracktunes Inc\r\nexport abstract class DoubleBuffer {\r\n    private buffer1: any;\r\n    private buffer2: any;\r\n    private preSwapCB: () => void;\r\n    protected bufferLength: number;\r\n    public bufferIndex: number;\r\n    public cumulativeIndex: number;\r\n    public activeBuffer: any;\r\n\r\n    constructor(buffer1: any, buffer2: any, preSwapCB: () => void = null) {\r\n        this.buffer1 = buffer1;\r\n        this.buffer2 = buffer2;\r\n        this.preSwapCB = preSwapCB;\r\n        this.bufferLength = buffer1.length;\r\n        if (!(this.buffer1['length'] && this.buffer2['length'])) {\r\n            throw Error('double buffer no length');\r\n        }\r\n        if (buffer2.length !== this.bufferLength) {\r\n            throw Error('double buffer size mismatch');\r\n        }\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.bufferIndex = 0;\r\n        this.cumulativeIndex = 0;\r\n        this.activeBuffer = this.buffer1;\r\n    }\r\n\r\n    protected swap(): void {\r\n        if (this.preSwapCB) {\r\n            this.preSwapCB(); // preSwapCB is calling saveWavFileChunk everytime\r\n        }\r\n        if (this.activeBuffer === this.buffer1) {\r\n            this.activeBuffer = this.buffer2;\r\n        }\r\n        else {\r\n            this.activeBuffer = this.buffer1;\r\n        }\r\n        this.bufferIndex = 0;\r\n    }\r\n}\r\n\r\nexport class DoubleBufferGetter extends DoubleBuffer {\r\n\r\n    constructor(buffer1: any, buffer2: any, preSwapCB: () => void = null) {\r\n        super(buffer1, buffer2, preSwapCB);\r\n    }\r\n\r\n    public getNext(): any {\r\n        if (this.bufferIndex === this.bufferLength) {\r\n            this.swap();\r\n        }\r\n        let value: any = this.activeBuffer[this.bufferIndex];\r\n        this.cumulativeIndex++;\r\n        this.bufferIndex++;\r\n        return value;\r\n    }\r\n}\r\n\r\nexport class DoubleBufferSetter extends DoubleBuffer {\r\n\r\n    constructor(buffer1: any, buffer2: any, preSwapCB: () => void = null) {\r\n        super(buffer1, buffer2, preSwapCB);\r\n    }\r\n\r\n    public setNext(value: any): void {\r\n        if (this.bufferIndex === this.bufferLength) {\r\n            this.swap();\r\n        }\r\n        this.activeBuffer[this.bufferIndex] = value;\r\n        // this.activeBuffer = this._downSample(this.activeBuffer, SAMPLE_RATE, 1000 * 16);\r\n        this.cumulativeIndex++;\r\n        this.bufferIndex++;\r\n    }\r\n\r\n    private _downSample(data, oldSampleRate, newSampleRate) {\r\n        let fitCount = Math.round(data.length * ( newSampleRate / oldSampleRate ));\r\n        let newData = [];\r\n        let springFactor = (data.length - 1) / (fitCount - 1);\r\n        newData[0] = data[0]; // for new allocation\r\n        for ( var i = 1; i < fitCount - 1; i++) {\r\n            let tmp = i * springFactor;\r\n            let before = new Number(Math.floor(tmp)).toFixed();\r\n            let after = new Number(Math.ceil(tmp)).toFixed();\r\n            let atPoint = tmp - parseFloat(before);\r\n            newData[i] = this._linearInterpolate(data[before], data[after], atPoint);\r\n        }\r\n        newData[fitCount - 1] = data[data.length - 1]; // for new allocation\r\n        return newData;\r\n    }\r\n    private _linearInterpolate(before, after, atPoint) {\r\n        return before + (after - before) * atPoint;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/double-buffer/double-buffer.ts","// Copyright (c) 2017 Tracktunes Inc\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { downloadBlob, pathFileName, isFolder } from '../../models';\r\nimport { DELEGATE_CTOR } from '@angular/core/src/reflection/reflection_capabilities';\r\n\r\n/** @constant {number} */\r\nexport const DEFAULT_REQUEST_SIZE: number = 1024 * 1024 * 1024;\r\n\r\nexport interface UsageAndQuota {\r\n    usedBytes: number;\r\n    grantedBytes: number;\r\n}\r\n\r\nexport class Filesystem {\r\n\r\n    /**\r\n     * @param  {FileSystem} fileSystem\r\n     * @param  {string[]} paths\r\n     * @returns Observable<Entry[]>\r\n     */\r\n    public static getEntriesFromPaths(fileSystem: FileSystem, paths: string[]): Observable<Entry[]> {\r\n        console.log('getEntriesFromPaths(fs, [' + paths.join(', ') + '])');\r\n        const entryObservableArray: Observable<Entry>[] = paths.map((path: string) => {\r\n            return Filesystem.getPathEntry(fileSystem, path, false);\r\n        });\r\n        const result: Entry[] = [];\r\n        const src: Observable<Entry[]> = Observable.create((observer) => {\r\n            Observable.from(entryObservableArray).concatAll().subscribe((entry: Entry) => {\r\n                result.push(entry);\r\n            }, (err: any) => {\r\n                observer.error(err);\r\n            }, () => {\r\n                observer.next(result);\r\n                observer.complete();\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {FileSystem} fileSystem\r\n     * @param  {string[]} paths\r\n     * @returns Observable<void>\r\n     */\r\n    public static deleteEntries(fileSystem: FileSystem, paths: string[]): Observable<void> {\r\n        console.log('deleteEntries(fs, [' + paths.join(', ') + '])');\r\n        const entryObservableArray: Observable<Entry>[] = paths.map((path: string) => {\r\n            return Filesystem.getPathEntry(fileSystem, path, false);\r\n        });\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            Observable.from(entryObservableArray).concatAll().subscribe((entry: Entry) => {\r\n                Filesystem.deleteEntry(entry).subscribe(\r\n                    null, (err1: any) => {\r\n                    observer.error(err1);\r\n                });\r\n            }, (err2: any) => {\r\n                observer.error(err2);\r\n            },() => {\r\n                observer.next();\r\n                observer.complete();\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {FileSystem} fileSystem\r\n     * @param  {string[]} paths\r\n     * @param  {DirectoryEntry} parent\r\n     * @returns Observable<void>\r\n     */\r\n    public static moveEntries(\r\n        fileSystem: FileSystem,\r\n        paths: string[],\r\n        parent: DirectoryEntry\r\n    ): Observable<void> {\r\n        console.log('moveEntries(fs, ' + paths + ',' +\r\n                    parent.name + ')');\r\n        const entryObservableArray: Observable<Entry>[] = paths.map((path: string) => {\r\n            return Filesystem.getPathEntry(fileSystem, path, false);\r\n        });\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            Observable.from(entryObservableArray).concatAll().subscribe((entry: Entry) => {\r\n                Filesystem.moveEntry(entry, parent).subscribe(\r\n                    null, (err1: any) => {\r\n                    observer.error(err1);\r\n                });\r\n            },(err2: any) => {\r\n                observer.error(err2);\r\n            },() => {\r\n                observer.next();\r\n                observer.complete();\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {Entry} entry\r\n     * @param  {DirectoryEntry} parent\r\n     * @returns Observable<void>\r\n     */\r\n    public static moveEntry(entry: Entry, parent: DirectoryEntry): Observable<void> {\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            entry.moveTo(parent, entry.name, (ent: Entry) => {\r\n                    console.log('moveEntry(): SUCCESS');\r\n                    observer.next();\r\n                    observer.complete();\r\n                }, (err: FileError) => {\r\n                    console.log('moveEntry(): ERROR: ' + err);\r\n                    observer.error(err);\r\n                });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * see https://www.html5rocks.com/en/tutorials/file/filesystem/\r\n     * @param  {Entry} entry\r\n     * @param  {string} oldName\r\n     * @param  {string} newName\r\n     * @returns Observable<void>\r\n     */\r\n    public static rename(fileSystem: FileSystem, parentDirectoryEntry: DirectoryEntry, oldName: string, newName: string): Observable<void> {\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            if (isFolder(oldName)) {\r\n                fileSystem.root.getDirectory(oldName, {create: false}, (entry: Entry) => {\r\n                        entry.moveTo(parentDirectoryEntry, newName);\r\n                        console.log('RENAME DIR SUCCESS ::: ' + newName);\r\n                        observer.next();\r\n                        observer.complete();\r\n                    }, (err: any) => {\r\n                        console.log('RENAME DIR ERROR ::: ' + err);\r\n                        observer.error(err);\r\n                    });\r\n            }\r\n            else {\r\n                fileSystem.root.getFile(oldName, {create: false}, (entry: Entry) => {\r\n                    entry.moveTo(parentDirectoryEntry, newName);\r\n                    observer.next();\r\n                    observer.complete();\r\n                },(err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            }\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {Entry} entry\r\n     * @returns Observable<void>\r\n     */\r\n    public static deleteEntry(entry: Entry): Observable<void> {\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            if (entry.isFile) {\r\n                entry.remove(() => {\r\n                    observer.next();\r\n                    observer.complete();\r\n                },(err: FileError) => {\r\n                    observer.error(err);\r\n                });\r\n            }\r\n            else if (entry.isDirectory) {\r\n                (<DirectoryEntry>entry).removeRecursively(() => {\r\n                    observer.next();\r\n                    observer.complete();\r\n                }, (err: FileError) => {\r\n                    observer.error(err);\r\n                });\r\n            }\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {FileSystem} fileSystem\r\n     * @param  {string} path\r\n     * @param  {boolean=false} bCreate\r\n     * @returns Observable<Entry>\r\n     */\r\n    public static getPathEntry(fileSystem: FileSystem, path: string, bCreate: boolean = false): Observable<Entry> {\r\n        console.log('getPathEntry(fs, ' + path + ', ' + bCreate + ')');\r\n        const src: Observable<Entry> = Observable.create((observer) => {\r\n            if (path === '/') {\r\n                observer.next(fileSystem.root);\r\n                observer.complete();\r\n            }\r\n            else if (path[path.length - 1] === '/') {\r\n                // it's a folder\r\n                fileSystem.root.getDirectory(path, { create: bCreate }, (directoryEntry: DirectoryEntry) => {\r\n                    observer.next(directoryEntry);\r\n                    observer.complete();\r\n                }, (err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            } // if (path[path.length - 1] === '/') {\r\n            else {\r\n                // it's a file\r\n                console.log('fileSystem.root.getFile(' + path + ', ' + bCreate + ')');\r\n                fileSystem.root.getFile(path, { create: bCreate },(fileEntry: FileEntry) => {\r\n                    observer.next(fileEntry);\r\n                    observer.complete();\r\n                },(err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            } // if (path[path.length - 1] === '/') { .. else { ..}\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {boolean} bPersistent\r\n     * @returns Observable<UsageAndQuota>\r\n     */\r\n    public static queryUsageAndQuota(\r\n        bPersistent: boolean\r\n    ): Observable<UsageAndQuota> {\r\n        const storageType: string = bPersistent ? 'webkitPersistentStorage' : 'webkitTemporaryStorage',\r\n        src: Observable<UsageAndQuota> = Observable.create((observer) => {\r\n                navigator[storageType].queryUsageAndQuota((usedBytes: number, grantedBytes: number) => {\r\n                    observer.next({\r\n                        usedBytes: usedBytes,\r\n                        grantedBytes: grantedBytes\r\n                    });\r\n                    observer.complete();\r\n                }, (err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {boolean} bPersistent\r\n     * @returns Observable<number>\r\n     */\r\n    public static requestQuota(bPersistent: boolean): Observable<number> {\r\n        const storageType: string =bPersistent ? 'webkitPersistentStorage' : 'webkitTemporaryStorage',\r\n        src: Observable<number> = Observable.create((observer) => {\r\n                navigator[storageType].requestQuota( DEFAULT_REQUEST_SIZE, (grantedBytes: number) => {\r\n                    observer.next(grantedBytes);\r\n                    observer.complete();\r\n                },(err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param  {boolean=true} bPersistent\r\n     * @param  {number=DEFAULT_REQUEST_SIZE} requestSize\r\n     * @returns Observable<FileSystem>\r\n     */\r\n    public static getFileSystem(bPersistent: boolean = true, requestSize: number = DEFAULT_REQUEST_SIZE): Observable<FileSystem> {\r\n        console.log('getFileSystem(bPersistent=' + bPersistent + ', requestSize=' + requestSize + ')');\r\n        const fsType: number = bPersistent ? window.PERSISTENT :  window.TEMPORARY;\r\n        const src: Observable<FileSystem> = Observable.create((observer) => {\r\n            Filesystem.requestQuota(bPersistent).subscribe((grantedBytes: number) => {\r\n                    ( window.requestFileSystem ||\r\n                      window['webkitRequestFileSystem']\r\n                    )(fsType, grantedBytes, (fs: FileSystem) => {\r\n                        observer.next(fs);\r\n                        observer.complete();\r\n                    },(err: any) => {\r\n                        observer.error(err);\r\n                    });\r\n                }\r\n            );\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * Write data into a file, starting at a particular location.\r\n     * @param {FileSystem} fs - the file system we're working with\r\n     * @param {string} path - full path of file to write to.\r\n     * @param {Blob} blob - the data to write.\r\n     * @param {number} seekOffset - the location (byte) to start writing from.\r\n     * @param {boolean} bCreate - whether to create the file first or not.\r\n     * @returns Observable<void>\r\n     */\r\n    public static writeToFile( fs: FileSystem, path: string, blob: Blob, seekOffset: number, bCreate: boolean): Observable<void> {\r\n        console.log('writeToFile(fs, ' + path + ', bCreate=' + bCreate + ')');\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            fs.root.getFile(path, { create: bCreate }, (fileEntry: FileEntry) => {\r\n                    // Create a FileWriter object for our FileEntry (log.txt).\r\n                    fileEntry.createWriter((fileWriter: FileWriter) => {\r\n                        fileWriter.onwriteend = (event: any) => {\r\n                            observer.next();\r\n                            observer.complete();\r\n                        };\r\n\r\n                        fileWriter.onerror = (err1: any) => {\r\n                            observer.error(err1);\r\n                        };\r\n                        if (seekOffset > 0) {\r\n                            fileWriter.seek(seekOffset);\r\n                        }\r\n                        fileWriter.write(blob);\r\n                    }, (err1: any) => {\r\n                        observer.error(err1);\r\n                    });\r\n                }, (err2: any) => {\r\n                    observer.error(err2);\r\n                }); // fs.root.getFile(\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {FileSystem} fs - the file system we're working with\r\n     * @param {string} path - the file to append to\r\n     * @param {Blob} blob - the data to write\r\n     * @returns Observable<FileEntry>\r\n     */\r\n    public static appendToFile( fs: FileSystem, path: string, blob: Blob): Observable<FileEntry> {\r\n        console.log('appendToFile(fs, ' + path + ', blob)');\r\n        const src: Observable<FileEntry> = Observable.create((observer) => {\r\n            fs.root.getFile( path,{ create: false }, (fileEntry: FileEntry) => {\r\n                    // Create a FileWriter object for our FileEntry (log.txt).\r\n                    fileEntry.createWriter((fileWriter: FileWriter) => {\r\n                        fileWriter.onwriteend = (event: any) => {\r\n                            console.log('appendToFile() - ' + 'Wrote ' + blob.size + ' bytes. ' + 'Accum = ' + fileWriter.length + ' bytes');\r\n                            observer.next(fileEntry);\r\n                            observer.complete();\r\n                        };\r\n                        fileWriter.onerror = (err1: any) => {\r\n                            observer.error(err1);\r\n                        };\r\n                        // see to end and write from there\r\n                        fileWriter.seek(fileWriter.length);\r\n                        fileWriter.write(blob);\r\n                    }, (err2: any) => {\r\n                        observer.error(err2);\r\n                    });\r\n                },\r\n                (err3: any) => {\r\n                    observer.error(err3);\r\n                }); // fs.root.getFile(\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {FileSystem} fs - the file system we're working with\r\n     * @param {string} path - the file to get metadata from\r\n     * @returns Observable<Metadata>\r\n     */\r\n    public static getMetadata(fs: FileSystem, path: string): Observable<Metadata> {\r\n        console.log('getMetadata(fs, ' + path + ')');\r\n        const src: Observable<Metadata> = Observable.create((observer) => {\r\n            if (isFolder(path)) {\r\n                fs.root.getDirectory(path, { create: false }, (directoryEntry: DirectoryEntry) => {\r\n                    directoryEntry.getMetadata((metadata: Metadata) => {\r\n                        observer.next(metadata);\r\n                        observer.complete();\r\n                    },(err1: FileError) => {\r\n                        observer.error(err1);\r\n                    });\r\n                },(err2: any) => {\r\n                    observer.error(err2);\r\n                }); // fs.root.getFile(\r\n            }\r\n            else {\r\n                fs.root.getFile(path, { create: false }, (fileEntry: FileEntry) => {\r\n                    fileEntry.getMetadata((metadata: Metadata) => {\r\n                        observer.next(metadata);\r\n                        observer.complete();\r\n                    },(err1: FileError) => {\r\n                        observer.error(err1);\r\n                    });\r\n                },(err2: any) => {\r\n                    observer.error(err2);\r\n                }); // fs.root.getFile(\r\n            }\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {FileSystem} fs - the file system we're working with\r\n     * @param {string} path - the path of the file to download\r\n     * @returns Observable<void>\r\n     */\r\n    public static downloadFileToDevice(fs: FileSystem, path: string): Observable<void> {\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            fs.root.getFile(path, { create: false }, (fileEntry: FileEntry) => {\r\n                fileEntry.file((file: File) => {\r\n                    const name: string = pathFileName(path);\r\n                    const len: number = name.length;\r\n                    const bSuffix: boolean = name.slice(len - 4, len).toLowerCase() === '.wav';\r\n                    downloadBlob(file, bSuffix ? name : name + '.wav');\r\n                    observer.next();\r\n                    observer.complete();\r\n                });\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {FileSystem} fs - the file system we're working with\r\n     * @param {string} path - the file to read from\r\n     * @param {number} startByte\r\n     * @param {number} endByte\r\n     * @returns Observable<ArrayBuffer>\r\n     */\r\n    public static readFromFile( fs: FileSystem, path: string, startByte: number = null, endByte: number = null): Observable<ArrayBuffer> {\r\n        console.log('readFromFile(fs, ' + path + ', ' + startByte + ', ' + endByte + ')');\r\n        const src: Observable<ArrayBuffer> = Observable.create((observer) => {\r\n            fs.root.getFile(path, { create: false }, (fileEntry: FileEntry) => {\r\n                fileEntry.file((file: File) => {\r\n                    const fileReader: FileReader = new FileReader();\r\n                    fileReader.onloadend = (event: ProgressEvent) => {\r\n                        console.log('onloadend: filereader.result = ' + (fileReader.result as any).byteLength);\r\n                        // console.dir(fileReader.result);\r\n                        observer.next(fileReader.result);\r\n                        observer.complete();\r\n                    };\r\n\r\n                    fileReader.onerror = (err1: any) => {\r\n                        observer.error(err1);\r\n                    };\r\n\r\n                    if (startByte || endByte) {\r\n                        // >=1 of startByte nor endByte were\r\n                        // specified, read from startByte to\r\n                        // endByte this is where we call slice()\r\n                        const start: number = startByte || 0;\r\n                        const end: number = endByte || file.size;\r\n                        const blob: Blob = file.slice(start, end);\r\n                        // we may need to give the blob (a) a\r\n                        // header, (b) a mime type and then the\r\n                        // chunks may be decoded - try that next.\r\n                        fileReader.readAsArrayBuffer(blob);\r\n                    }\r\n                    else {\r\n                        // neither startByte nor endByte were\r\n                        // specified, read entire file\r\n                        fileReader.readAsArrayBuffer(file);\r\n                    }\r\n                },(err2: any) => {\r\n                    observer.error(err2);\r\n                });\r\n            }, (err3: any) => {\r\n                observer.error(err3);\r\n            }); // fs.root.getFile(\r\n\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {DirectoryEntry} parentDirectoryEntry\r\n     * @param {string} name\r\n     * @returns Observable<DirectoryEntry>\r\n     */\r\n    public static createFolder( parentDirectoryEntry: DirectoryEntry, name: string): Observable<DirectoryEntry> {\r\n        console.log('createFolder(' + parentDirectoryEntry.fullPath + ', ' + name + ')');\r\n        const src: Observable<DirectoryEntry> = Observable.create((observer) => {\r\n            parentDirectoryEntry.getDirectory(name, { create: true }, (directoryEntry: DirectoryEntry) => {\r\n                observer.next(directoryEntry);\r\n                observer.complete();\r\n            }, (err: any) => {\r\n                observer.error(err);\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {DirectoryEntry} directoryEntry -\r\n     */\r\n    public static readFolderEntries(directoryEntry: DirectoryEntry): Observable<Entry[]> {\r\n        console.log('readFolderEntries(' + directoryEntry.fullPath + ')');\r\n        const src: Observable<Entry[]> = Observable.create((observer) => {\r\n            let dirReader: DirectoryReader = directoryEntry.createReader();\r\n            let results: Entry[] = [];\r\n            const readEntries: () => void = () => {\r\n                dirReader.readEntries((entries: Entry[]) => {\r\n                    if (entries.length) {\r\n                        results = results.concat(entries);\r\n                        readEntries();\r\n                    }else {\r\n                        // base case - done\r\n                        observer.next(results);\r\n                        observer.complete();\r\n                    }\r\n                },(err: any) => {\r\n                    observer.error(err);\r\n                });\r\n            };\r\n            // start reading dir entries\r\n            readEntries();\r\n        });\r\n        return src;\r\n    }\r\n\r\n    /**\r\n     * @param {FileSystem} fileSystem - file system where we're erasing\r\n     * @returns Observable<void>\r\n     */\r\n    public static eraseEverything(fileSystem: FileSystem): Observable<void> {\r\n        const src: Observable<void> = Observable.create((observer) => {\r\n            Filesystem.readFolderEntries(fileSystem.root).subscribe((entries: Entry[]) => {\r\n                const paths: string[] = entries.map((entry: Entry): string => {\r\n                    return entry.fullPath + (entry.isFile ? '' : '/');\r\n                });\r\n                console.log('CURRENT PATHS ', paths);\r\n                Filesystem.deleteEntries(fileSystem, paths).subscribe(() => {\r\n                    console.log('ALL ERASED');\r\n                    observer.next();\r\n                    observer.complete();\r\n                }, (err1: any) => {\r\n                    observer.error(err1);\r\n                });\r\n            },(err2: any) => {\r\n                observer.error(err2);\r\n            });\r\n        });\r\n        return src;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/filesystem/filesystem.ts","// Copyright (c) 2017 Tracktunes Inc\r\n\r\n'use strict';\r\n\r\n/**\r\n * Extracts the full path of an entry, if it's a folder it ends with '/'.\r\n * @param {string}\r\n * @returns string\r\n */\r\nexport function getFullPath(entry: Entry): string {\r\n    const fullPath: string = entry.fullPath;\r\n    return entry.isDirectory && (fullPath.length > 1) ?\r\n        fullPath + '/' : fullPath;\r\n}\r\n\r\n/**\r\n * Returns true if path is a folder and false otherwise.\r\n * @param {string}\r\n * @returns boolean\r\n */\r\nexport function isFolder(path: string): boolean {\r\n    return (path[path.length - 1] === '/');\r\n}\r\n\r\n/**\r\n * Extracts the filename out of a full-path\r\n * @param {string}\r\n * @returns string\r\n */\r\nexport function pathFileName(filePath: string): string {\r\n    return filePath.replace(/^.*[\\\\\\/]/, '');\r\n}\r\n\r\n/**\r\n * Extracts the folder out of a full-path\r\n * @param {string}\r\n * @returns string\r\n */\r\nfunction pathFolderName(filePath: string): string {\r\n    // return filePath.replace(pathFileName(filePath), '');\r\n    return filePath.match(/^.*[\\\\\\/]/).toString();\r\n}\r\n\r\nexport function pathParent(path: string): string {\r\n    if (isFolder(path)) {\r\n        return folderPathParent(path);\r\n    }\r\n    else {\r\n        return pathFolderName(path);\r\n    }\r\n}\r\n\r\nexport function pathChild(path: string): string {\r\n    return path.replace(pathParent(path), '');\r\n}\r\n\r\n/**\r\n * Extracts the parent folder out of a full-path of a folder argument.\r\n * @param {string}\r\n * @returns string\r\n */\r\nfunction folderPathParent(dirPath: string): string {\r\n    const pathParts: string[] =\r\n          dirPath.split('/').filter((str: string) => { return str !== ''; }),\r\n          nParts: number = pathParts.length;\r\n    if (nParts <= 1) {\r\n        return '/';\r\n    }\r\n    return '/' + pathParts.splice(0, nParts - 1).join('/') + '/';\r\n}\r\n\r\n/**\r\n * Update object 'dest' by adding or changing any fields that differ in 'src'\r\n * @param {Object} 'src' the source object from which to update 'dest'\r\n * @param {Object} 'dest' the destination object to update and return\r\n * @returns Object - the updated 'dest' object\r\n */\r\nexport function copyFromObject(src: Object, dest: Object): Object {\r\n    for (let prop in src) {\r\n        if (has(src, prop)) {\r\n            dest[prop] = src[prop];\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\n/**\r\n * @param {any}\r\n * @param {any}\r\n * @returns boolean\r\n */\r\nexport function has(obj: any, prop: any): boolean {\r\n    return Object.prototype.hasOwnProperty.call(obj, prop);\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a function.\r\n * @param {any}\r\n * @returns boolean\r\n */\r\nexport function isFunction(func: any): boolean {\r\n    return (typeof func) === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is defined.\r\n * @param {any}\r\n * @returns boolean\r\n */\r\nexport function isDefined(obj: any): boolean {\r\n    return (typeof obj) !== 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is undefined.\r\n * @param {any}\r\n * @returns boolean\r\n */\r\nexport function isUndefined(obj: any): boolean {\r\n    return (typeof obj) === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given argument is a string.\r\n * @param {any}\r\n * @returns boolean\r\n */\r\nexport function isString(obj: any): boolean {\r\n    return Object.prototype.toString.call(obj) === '[object String]';\r\n}\r\n\r\n/**\r\n * Positive whole number test\r\n * @param {number} the number we're verifying\r\n * @returns boolean - whether argument is a positive whole number\r\n */\r\nexport function isPositiveWholeNumber(num: number): boolean {\r\n    return<boolean>(isWholeNumber(num) && num > 0);\r\n}\r\n\r\n/**\r\n * Whole number test\r\n * @param {number} the number we're verifying\r\n * @returns boolean - whether argument is a whole number\r\n */\r\nexport function isWholeNumber(num: number): boolean {\r\n    return<boolean>(\r\n        num === 0 || (num && !isNaN(num) && num === Math.floor(num))\r\n    );\r\n}\r\n\r\n/**\r\n * @param {number}\r\n * return {boolean}\r\n */\r\nexport function isOdd(num: number): boolean {\r\n    if (!isWholeNumber(num)) {\r\n        throw Error('isOdd expected whole number as input, got: ' + num);\r\n    }\r\n    return num % 2 === 1;\r\n}\r\n\r\n/**\r\n * @param {number}\r\n * @returns boolean\r\n */\r\nexport function isEven(num: number): boolean {\r\n    return !isOdd(num);\r\n}\r\n\r\n/**\r\n * @param {number}\r\n * @returns string\r\n */\r\nfunction addZero(num: number): string {\r\n    return (num < 10) ? '0' : '';\r\n}\r\n\r\n/**\r\n * format time into H*:MM:SS.CC\r\n * @param {number} - number of seconds, float\r\n * @param {number} - maximum time, determines final string length/components\r\n * @returns string - the time string representation\r\n */\r\nexport function formatTime(\r\n    timeInSeconds: number,\r\n    maxTimeInSeconds: number\r\n): string {\r\n    let nSeconds: number = Math.floor(timeInSeconds),\r\n        // initialize the result with the centiseconds portion and period\r\n        result: string = (timeInSeconds - nSeconds).toFixed(2).substr(1);\r\n    if (timeInSeconds < 60 && maxTimeInSeconds < 60) {\r\n        // no minutes\r\n        result = addZero(nSeconds) + nSeconds.toString() + result;\r\n    }\r\n    else {\r\n        // yes minutes\r\n        let nMinutes: number = Math.floor(nSeconds / 60.0);\r\n        nSeconds -= nMinutes * 60;\r\n        result = ':' + addZero(nSeconds) + nSeconds.toString() + result;\r\n        if (timeInSeconds < 3600 && maxTimeInSeconds < 3600) {\r\n            // no hours in timeInSeconds\r\n            result = addZero(nMinutes) + nMinutes.toString() + result;\r\n        }\r\n        else {\r\n            // we've got hours - timeInSeconds spans hours\r\n            const nHours: number = Math.floor(nMinutes / 60.0);\r\n            nMinutes -= nHours * 60;\r\n            result = nHours.toString() + ':' + addZero(nMinutes) +\r\n                nMinutes + result;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Create a string that reflects the Unix timestamp 'timestamp'\r\n * at 1 second resolution in human readable form\r\n * @param {number} timestamp - Unix timestamp representation of datetime\r\n * @returns string - human readable text representation of timestamp\r\n */\r\nexport function formatUnixTimestamp(timestamp: number): string {\r\n    return formatDate(new Date(timestamp));\r\n}\r\n\r\n/**\r\n * Create a string that reflects the Unix date 'date'\r\n * at 1 second resolution in human readable form\r\n * @param {number} timestamp - Unix timestamp representation of datetime\r\n * @returns string - human readable text representation of timestamp\r\n */\r\nexport function formatDate(date: Date): string {\r\n    return [\r\n        date.getFullYear().toString(),\r\n        '-',\r\n        (date.getMonth() + 1).toString(),\r\n        '-',\r\n        date.getDate().toString()\r\n    ].join('').toLowerCase().replace(' ', '');\r\n}\r\n\r\n/**\r\n * Digs through a Javascript object to display all its properties.\r\n * @param {Object} - a Javascript object to inspect\r\n * @returns string - concatenated descriptions of all object properties\r\n */\r\nexport function objectInspector(object: Object): string {\r\n    let rows: string[] = [],\r\n        key: string,\r\n        count: number = 0;\r\n    for (key in object) {\r\n        if (!has(object, key)) {\r\n            continue;\r\n        }\r\n        const val: any = object[key];\r\n        rows.push([' - ', key, ':', val, ' (', typeof val, ')'].join(''));\r\n        count++;\r\n    }\r\n    return [\r\n        '\\nType: ' + typeof object,\r\n        'Length: ' + count,\r\n        rows.join('\\n')\r\n    ].join('\\n');\r\n}\r\n\r\n/**\r\n * Adds a value to an array as its first element.\r\n * @param {any} value - value to add to array.\r\n * @param {any[]} arr - the array to add to.\r\n * @returns any[] - the appended-to array.\r\n */\r\nexport function prependArray(value: any, arr: any[]): any[] {\r\n    let newArray: any[] = arr.slice(0);\r\n    newArray.unshift(value);\r\n    return newArray;\r\n}\r\n\r\n/**\r\n * Save blob into a local file.\r\n * NOTE: we cannot use the function below everywhere\r\n * (a) because some browsers don't support the url that's created\r\n *     the way it's created here as the href field;\r\n * (b) because chrome on android would not allow this - it considers\r\n *     it to be a cross origin request, so at this point we cannot\r\n *     download on mobile browsers.\r\n * @param {Blob}\r\n * @param {filename}\r\n */\r\nexport function downloadBlob(blob: Blob, filename: string): void {\r\n    /*\r\n    let url = (window.URL || window.webkitURL)\r\n        .createObjectURL(blob);\r\n    let link = document.getElementById(\"a-save-link\");\r\n    link.href = url;\r\n    link.download = filename || 'output.wav';\r\n    console.log('hi1');\r\n    console.dir(link);\r\n    console.log('simulateCLick(link): ' + simulateClick(link));\r\n    console.log('hi2');\r\n    // link.click();\r\n    */\r\n    const url: string = (window['URL'] || window['webkitURL'])\r\n        .createObjectURL(blob);\r\n    let anchorElement: HTMLAnchorElement = document.createElement('a');\r\n    anchorElement.style.display = 'none';\r\n    anchorElement.href = url;\r\n    anchorElement.setAttribute('download', filename);\r\n    document.body.appendChild(anchorElement);\r\n    // anchorElement.click();\r\n    simulateClick(anchorElement);\r\n    setTimeout(\r\n        () => {\r\n            document.body.removeChild(anchorElement);\r\n            window.URL.revokeObjectURL(url);\r\n            console.log('downloadBlob(' + filename + '): finished!');\r\n        },\r\n        100);\r\n}\r\n\r\n/**\r\n * Simulate a click event.\r\n * @public\r\n * @param {Element} elem  the element to simulate a click on\r\n * @returns boolean - True if canceled, false otherwise\r\n */\r\nfunction simulateClick(element: Element): boolean {\r\n    // Create our event (with options)\r\n    const evt: MouseEvent = new MouseEvent('click', {\r\n        bubbles: true,\r\n        cancelable: false,\r\n        view: window\r\n    });\r\n    // If cancelled, don't dispatch our event\r\n    return element.dispatchEvent(evt);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/misc-utils/misc-utils.ts","import { Question } from './question.model';\r\n\r\nexport class DropdownQuestion extends Question {\r\n  controlType = 'dropdown';\r\n  options: {key: string, value: string}[] = [];\r\n\r\n  constructor(question: {}) {\r\n    super(question);\r\n    this.options = question['options'] || [];\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/form/questions/question-dropdown.model.ts","import { Question } from './question.model';\r\n\r\nexport class TextboxQuestion extends Question {\r\n  // controlType = 'textbox';\r\n  type: string;\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n    this.type = options['type'] !== \"\" ? options['type'] : 'text';\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/form/questions/question-textbox.model.ts","import { Question } from './question.model';\r\n\r\nexport class ToggleQuestion extends Question {\r\n  controlType = 'toggle';\r\n\r\n  constructor(options: {}) {\r\n    super(options);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/form/questions/question-toggle.model.ts","export const LoaderConfigs = {\r\n    submit:{\r\n        spinner: 'bubbles',\r\n        content: `\r\n            <div class=\"custom-spinner-container\">\r\n                <div class=\"custom-spinner-box\">\r\n                    Analyzing, please wait...\r\n                </div>\r\n            </div>`,\r\n        duration: 100000\r\n    },\r\n\r\n    loading:{\r\n        spinner: 'bubbles',\r\n        content: `\r\n            <div class=\"custom-spinner-container\">\r\n                <div class=\"custom-spinner-box\">\r\n                    Loading...\r\n                </div>\r\n            </div>`,\r\n        duration: 100000\r\n    }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/components/loaders/loaders.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AudioContextGenerator {\r\n    context: AudioContext;\r\n    sampleRate: number;\r\n    constructor() {}\r\n\r\n    createAudioContext(): AudioContext {\r\n        let context: AudioContext = null;\r\n        window['AudioContext'] =\r\n            window['AudioContext'] || window['webkitAudioContext'];\r\n        try {\r\n            // context = new AudioContext({ latencyHint: 'playback' });\r\n            context = new AudioContext();\r\n            this.setAudioContext(context);\r\n        }\r\n        catch (err) {\r\n            console.error('Web Audio API is not supported in this browser');\r\n        }\r\n        return context;\r\n    }\r\n\r\n    getAudioContext() {\r\n        return this.context || null;\r\n    }\r\n\r\n    getSampleRate() {\r\n        return this.context ? this.context.sampleRate : null;\r\n    }\r\n\r\n    setAudioContext(context: AudioContext): void {\r\n        this.context = context;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/web-audio/audioContextGenerator.service.ts","import { Component, Input, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Question, EventBody } from '../../../models';\r\n \r\n@Component({\r\n  selector: 'df-question',\r\n  templateUrl: './DynamicQuestion.component.html',\r\n  styles:['./DynamicQuestion.component.css']\r\n})\r\nexport class DynamicQuestionComponent {\r\n  //questions\r\n  @Input() question: Question;\r\n  //FormGroup where to put the questions\r\n  @Input() form: FormGroup;\r\n  //event link from the form\r\n  @Input() changeEvent: EventEmitter<any>;\r\n  \r\n  constructor(){}\r\n  /**\r\n   * Verify if is valid input field\r\n   * @return True or False\r\n   */\r\n  get isValid(): Boolean {\r\n    return this.form.controls[this.question.key] ? this.form.controls[this.question.key].valid : true;\r\n  }\r\n  \r\n  /**\r\n   * Method to handle form value changes and realtime responses\r\n   * @param: event EventEmitter sent from the component\r\n   * @param: question Question that must contains the metadata for the action\r\n   */\r\n  onChangeAnswer(event: EventEmitter<any>, question: Question): void {\r\n    if(question.event){\r\n      let action: EventBody = { event, question };\r\n      this.changeEvent.emit(action);\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/formbuilder/Question/DynamicQuestion.component.ts","export * from './wav-file/wav-file';\r\nexport * from './double-buffer/double-buffer';\r\nexport * from './filesystem/filesystem';\r\nexport * from './misc-utils/misc-utils';\r\nexport * from './actionoptions.model';\r\nexport * from './event.model';\r\nexport * from './eventbody.model';\r\nexport * from './form/questions/questionbody.model';\r\nexport * from './form/questions/question-dropdown.model';\r\nexport * from './form/questions/question-textbox.model';\r\nexport * from './form/questions/question-toggle.model';\r\nexport * from './form/questions/question.model';\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts"],"sourceRoot":""}